{"version":3,"sources":["components/Home.js","apis/api.js","components/ShoppingListForm.js","components/ShoppingListRow.js","components/ShoppingList.js","components/ShoppingListProductShow.js","components/ShoppingListProducts.js","components/AddProductForm.js","components/ShoppingListShow.js","components/ShoppingListPage.js","components/StoreShow.js","components/StoreForm.js","components/StoreProducts.js","components/Category.js","components/Aisle.js","components/StorePage.js","components/Store.js","components/Login.js","components/Signup.js","components/Register.js","components/Suggestions.js","components/randomIngredient.js","components/SearchPage.js","components/test.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","Container","fluid","className","Row","Col","href","to","React","Component","axios","create","baseURL","ShoppingListForm","budgetRef","createRef","nameRef","handleSubmit","e","preventDefault","name","current","value","budget","user","localStorage","id","props","handleShowShoppingListForm","getShoppingLists","Api","post","Number","headers","Authorization","window","token","then","res","console","log","statusText","goBack","showForm","Form","Group","controlId","Label","Control","type","placeholder","ref","this","Button","variant","onClick","ShoppingListRow","formatDate","date","days","1","2","3","4","5","6","7","8","9","0","day","split","pop","month","10","11","12","destroyShoppingList","shoppingList","delete","catch","err","handleShowShoppingList","products","length","ShoppingList","shoppingLists","shoppingListElements","map","i","key","Table","striped","bordered","hover","ShoppingListProductShow","currentProducts","price","toUpperCase","htmlFor","ShoppingListProducts","productList","total","isLoaded","getProducts","productIds","updateTotal","list","forEach","get","push","data","setState","prevState","Math","round","productElements","product","colSpan","AddProductForm","priceRef","descriptionRef","ingredientsRef","productId","getProductIds","addProduct","description","ingredients","addProductToList","listId","patch","handleShowProductForm","Modal","Dialog","show","toString","Header","Title","Body","as","rows","Footer","ShoppingListShow","showProductForm","currentTotal","currentShoppingList","totalClass","getClass","handleAddProduct","initialBudget","ShoppingListPage","showShoppingListForm","showShoppingListProduct","lists","userShoppingList","filter","loaded","showShoppingList","lg","color","height","width","StoreShow","destroyStore","getStores","address","aisles","handleShowStore","store","StoreForm","addressRef","handleShowForm","refreshStores","StoreProducts","handleShowProducts","Category","getCategoryName","category","Aisle","categories","showNewCategoryForm","getCategories","aisle","currentCategories","showCategories","handleAddCategory","destroyAisle","StorePage","showProducts","showAisleForm","handleAddAisle","numberRef","submitAisleForm","aisleNumber","number","addAislesToStore","alert","aisleId","getAisles","showAisles","handleShowAisleForm","Store","stores","showStore","selectedStore","usersStores","allStores","sm","md","Login","username","password","handleChange","target","prevstate","newState","onSubmit","handleLogin","onChange","Signup","handleSignup","Register","loggedIn","displayedForm","displayForm","response","status","String","Axios","handleLogout","form","loggedOutNav","Nav","Link","loggedInNav","Alert","slice","Suggestions","handleAddToList","showClass","suggestion","food_description","SearchPage","suggestions","searchResults","nextItems","resultsCategory","query","searchRef","getFoodData","prevQuery","d","includes","getRandomIngredients","meals","results","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","showIngredients","showSuggestions","getCategoryFromItem","match","handleSearchQuery","event","eventData","clearTimeout","setTimeout","method","aria-label","Test","App","showNavbar","toggleNavbar","Navbar","expand","bg","Item","Brand","Toggle","aria-controls","Collapse","exact","path","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c725d68c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nclass Home extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Container fluid={true}>\n          <div className=\"home-container\"></div>\n          <Row>\n            <div className=\"welcome-header\"></div>\n          </Row>\n          <Row>\n            <Col className=\"home-image-container\">\n              <a href=\"/shop_it_django/\">\n                <div className=\"home-image-cart\"></div>\n              </a>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Link to=\"/stores\">\n                <span className=\"home-store-label\">View Stores </span>\n                <div className=\"home-store-image-container\"></div>{\" \"}\n              </Link>\n            </Col>\n            <Col>\n              <Link to=\"/shopping_list\">\n                <span className=\"home-list-label\">View Shopping Lists</span>\n                <div className=\"home-list-image-container\"></div>\n              </Link>\n            </Col>\n            <Col>\n              <div className=\"home-search-box-container\">\n                <span className=\"home-search-label\">Search</span>\n                <Link to=\"/search\" className=\"home-search-icon\">\n                  <span className=\"search-icon-label\">\n                    Search for a product\n                  </span>\n                  <i className=\"fa fa-search\"></i>\n                </Link>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import axios from \"axios\";\n\n// axios.defaults.xsrfCookieName = \"csrftoken\";\n// axios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nexport default axios.create({\n  baseURL: \"https://shop-it-quick.herokuapp.com/api/\"\n  // baseURL: \"http://localhost:8000/api/\"\n});\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass ShoppingListForm extends Component {\n  state = {};\n  budgetRef = React.createRef();\n  nameRef = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let name = this.nameRef.current.value;\n    let budget = this.budgetRef.current.value;\n    let user = localStorage.id;\n    const { handleShowShoppingListForm, getShoppingLists } = this.props;\n    Api.post(\n      \"shopping_list/\",\n      { budget, user: Number(user), name },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${window.localStorage.token}`\n        }\n      }\n    ).then(res => {\n      handleShowShoppingListForm();\n      getShoppingLists();\n      console.log(res.statusText);\n      this.goBack(true);\n    });\n  };\n  goBack = showForm => {\n    const { handleShowShoppingListForm, getShoppingLists } = this.props;\n    !showForm && handleShowShoppingListForm();\n    getShoppingLists();\n  };\n\n  render() {\n    console.log(localStorage.id);\n    return (\n      <Form className=\"new-list-form\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label className=\"list-name-label\">Name of List</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Name\"\n            ref={this.nameRef}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label className=\"list-budget-label\">Budget</Form.Label>\n          <Form.Control\n            className=\"budget-input\"\n            type=\"number\"\n            placeholder=\"Enter your budget\"\n            ref={this.budgetRef}\n          />\n        </Form.Group>\n        <Button variant=\"outline-primary\" onClick={() => this.goBack()}>\n          Back\n        </Button>\n        <Button\n          className=\"new-list-submit\"\n          variant=\"outline-primary\"\n          type=\"submit\"\n          onClick={this.handleSubmit}\n        >\n          Submit\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default ShoppingListForm;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass ShoppingListRow extends Component {\n  formatDate = date => {\n    const months = {\n      1: \"January\",\n      2: \"February\",\n      3: \"March\",\n      4: \"April\",\n      5: \"May\",\n      6: \"June\",\n      7: \"July\",\n      8: \"August\",\n      9: \"September\",\n      10: \"October\",\n      11: \"November\",\n      12: \"December\"\n    };\n    const days = {\n      1: \"st\",\n      2: \"nd\",\n      3: \"rd\",\n      4: \"th\",\n      5: \"th\",\n      6: \"th\",\n      7: \"th\",\n      8: \"th\",\n      9: \"th\",\n      0: \"th\"\n    };\n\n    date = date.split(\"-\");\n    let day = date.pop(-1);\n    let month = date.pop(-1);\n    month = months[month];\n    if (day >= 10) {\n      day = day + days[day[1]];\n    } else {\n      day = day + days[day];\n    }\n\n    let fullDate = month + \"  \" + day;\n\n    return fullDate;\n  };\n  destroyShoppingList = () => {\n    const { id } = this.props.shoppingList;\n    const { getShoppingLists } = this.props;\n    Api.delete(`shopping_list/${id}/`, {\n      headers: {\n        \"Content-Type\": \"Application/json\",\n        Authorization: `Token ${localStorage.token}`\n      }\n    })\n      .then(res => {\n        console.log(\"Shopping List Deleted\");\n        getShoppingLists();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    const { shoppingList, handleShowShoppingList } = this.props;\n    const { name, budget, products, date } = shoppingList;\n\n    return (\n      <tr>\n        <td>\n          <p\n            className=\"list-name\"\n            onClick={() => handleShowShoppingList(shoppingList, products)}\n          >\n            {name}\n            <br />\n          </p>\n          <Button\n            className=\"delete-list-button\"\n            variant=\"outline-danger\"\n            onClick={this.destroyShoppingList}\n          >\n            <span>X</span>\n          </Button>\n          <span className=\"list-date\"> {this.formatDate(date)}</span>\n        </td>\n\n        <td>\n          $ {budget}\n          <br />\n          <span></span>\n        </td>\n\n        <td>\n          <ul>{products.length}</ul>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ShoppingListRow;\n","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ShoppingListRow from \"./ShoppingListRow\";\n\nclass ShoppingList extends Component {\n  state = {\n    shoppingList: []\n  };\n\n  componentDidUpdate() {}\n\n  render() {\n    const {\n      shoppingLists,\n      handleShowShoppingList,\n      products,\n      getShoppingLists\n    } = this.props;\n    const shoppingListElements = shoppingLists.map((shoppingList, i) => {\n      return (\n        <ShoppingListRow\n          key={i}\n          shoppingList={shoppingList}\n          //   productsLength={currentProductsLength}\n          products={products}\n          handleShowShoppingList={handleShowShoppingList}\n          getShoppingLists={getShoppingLists}\n        />\n      );\n    });\n    return (\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Shopping List</th>\n            <th>Budget</th>\n            <th>Items</th>\n          </tr>\n        </thead>\n        <tbody>{shoppingListElements}</tbody>\n      </Table>\n    );\n  }\n}\n\nexport default ShoppingList;\n","import React, { Component } from \"react\";\nclass ShoppingListProductShow extends Component {\n  state = {};\n  render() {\n    const { currentProducts } = this.props;\n    const { name, price } = currentProducts;\n    return (\n      <div>\n        <div className=\"product-name\">\n          <h2>{name.toUpperCase()}</h2>\n          <p>$ {price}</p>\n        </div>\n        <span className=\"add-to-cart-button\">\n          <label htmlFor=\"added\">Added to Cart</label>&nbsp;\n          <input type=\"checkbox\" value=\"added\" />\n        </span>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default ShoppingListProductShow;\n","import React, { Component } from \"react\";\nimport Api from \"../apis/api\";\nimport ShoppingListProductsShow from \"./ShoppingListProductShow\";\n\nclass ShoppingListProducts extends Component {\n  state = {\n    productList: [],\n    total: Number(this.props.total),\n    isLoaded: false\n  };\n\n  getProducts = () => {\n    const { products: productIds, updateTotal } = this.props;\n    const list = [];\n\n    productIds.forEach(id => {\n      Api.get(`products/${id}/`)\n        .then(res => {\n          list.push(res.data);\n\n          this.setState(prevState => {\n            return {\n              total: Math.round((prevState.total - res.data.price) * 100) / 100\n            };\n          });\n        })\n        .then(res => {\n          this.setState({\n            productList: list\n          });\n          updateTotal(this.state.total);\n        });\n    });\n  };\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  render() {\n    const { productList, isLoaded, total } = this.state;\n\n    let productElements = productList.map(\n      (product, i) =>\n        !isLoaded && (\n          <ShoppingListProductsShow\n            key={i}\n            currentProducts={product}\n            total={total}\n          />\n        )\n    );\n\n    return (\n      <td colSpan=\"3\" className=\"shopping-list-products\">\n        {productElements}\n      </td>\n    );\n  }\n}\n\nexport default ShoppingListProducts;\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form, Col, Row } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass AddProductForm extends Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  descriptionRef = React.createRef();\n  ingredientsRef = React.createRef();\n\n  state = {\n    productId: [],\n    isLoaded: false\n  };\n  /// Item form searches through api products to display suggestions\n  /// POST create product\n  /// PATCH then add item to list\n\n  getProductIds = () => {\n    const { products } = this.props.shoppingList;\n    console.log(products);\n  };\n  addProduct = () => {\n    const name = this.nameRef.current.value;\n    const price = this.priceRef.current.value;\n    let description = this.descriptionRef.current.value;\n    let ingredients = this.ingredientsRef.current.value;\n\n    const { isLoaded } = this.state;\n\n    if (!description) {\n      description = \"N/A\";\n    }\n    if (!ingredients) {\n      ingredients = \"N/A\";\n    }\n\n    const data = { name, price, description, ingredients };\n\n    Api.post(\"products/\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.token}`\n      }\n    })\n      .then(res => {\n        const { id } = res.data;\n        this.addProductToList(id);\n        this.setState({ productId: id, isLoaded: !isLoaded });\n        console.log(res.statusText);\n      })\n      .catch(err => {\n        console.log(\"Error: \" + err);\n      });\n  };\n\n  addProductToList = productId => {\n    const { isLoaded } = this.state;\n    const { getShoppingLists } = this.props;\n    const { id: listId, products } = this.props.shoppingList;\n    let data = {\n      products: [...products, Number(productId)]\n    };\n    Api.patch(`shopping_list/${listId}/`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.token}`\n      }\n    }).then(res => {\n      this.setState({ isLoaded: !isLoaded });\n      getShoppingLists();\n    });\n  };\n\n  handleSubmit = () => {\n    const { handleShowProductForm, getShoppingLists } = this.props;\n    // const price = this.priceRef.current.value;\n    this.addProduct();\n    getShoppingLists();\n    handleShowProductForm();\n  };\n  render() {\n    const { shoppingList, handleShowProductForm } = this.props;\n    const { id } = shoppingList;\n\n    return (\n      <Modal.Dialog show={handleShowProductForm.toString()}>\n        <Modal.Header>\n          <Modal.Title>Add a product to shopping list {id}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  placeholder=\"Enter Name\"\n                  ref={this.nameRef}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPrice\">\n                <Form.Label>Price</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"5.00\"\n                  ref={this.priceRef}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group as={Row} controlId=\"exampleForm.ControlDescription\">\n              <Form.Label className=\"form-description\">Description</Form.Label>\n              <Form.Control\n                className=\"form-description\"\n                as=\"textarea\"\n                rows=\"3\"\n                ref={this.descriptionRef}\n                placeholder=\"N/A\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"exampleForm.ControlIngredients\">\n              <Form.Label className=\"form-ingredients\">Ingredients</Form.Label>\n              <Form.Control\n                className=\"form-ingredients\"\n                as=\"textarea\"\n                rows=\"3\"\n                ref={this.ingredientsRef}\n                placeholder=\"N/A\"\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleShowProductForm}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n\nexport default AddProductForm;\n","import React, { Component } from \"react\";\nimport ShoppingListProducts from \"./ShoppingListProducts\";\nimport AddProductForm from \"./AddProductForm\";\nimport { Table } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\nclass ShoppingListShow extends Component {\n  state = {\n    showProductForm: false,\n    currentTotal: this.props.currentShoppingList.budget,\n    isLoaded: false,\n    products: [],\n    totalClass: null\n  };\n\n  getClass = () => {\n    let { currentTotal } = this.state;\n    currentTotal = Number(currentTotal);\n\n    if (\n      (currentTotal >= 1 && currentTotal <= 14 && currentTotal >= 0) ||\n      currentTotal <= 0\n    ) {\n      return \"danger\";\n    } else if (currentTotal >= 15 && currentTotal <= 30) {\n      return \"warning\";\n    } else {\n      return \"normal\";\n    }\n  };\n  getProducts = () => {\n    const { currentProducts: productIds } = this.props;\n    const { isLoaded } = this.state;\n    productIds.forEach(id => {\n      Api.get(`products/${id}/`).then(res => {\n        const { products } = this.state;\n        this.setState({\n          products: [...products, res.data],\n          isLoaded: !isLoaded\n        });\n      });\n    });\n    this.setState({ isLoaded: !isLoaded });\n  };\n  handleAddProduct = () => {\n    const { getShoppingLists } = this.props;\n    this.handleShowProductForm();\n    getShoppingLists();\n    this.getProducts();\n    // this.setState({ isLoaded: !isLoaded });\n  };\n  handleShowProductForm = () => {\n    const { showProductForm } = this.state;\n    this.setState({ showProductForm: !showProductForm });\n  };\n  updateTotal = total => {\n    this.setState({\n      currentTotal: total\n    });\n  };\n\n  componentDidUpdate() {\n    // this.setState({ totalClass: this.getClass() });\n    // this.state[\"totalClass\"] = this.getClass();\n  }\n  render() {\n    const { showProductForm, currentTotal, isLoaded, totalClass } = this.state;\n    const {\n      currentShoppingList: shoppingList,\n      currentProducts,\n      getShoppingLists\n    } = this.props;\n    const { name, budget: initialBudget, products } = shoppingList;\n    return (\n      <>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Shopping List</th>\n              <th>Initial Budget </th>\n              <th>Current Total </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <span>{name}</span>{\" \"}\n              </td>\n              <td>$ {initialBudget}</td>\n              <td className={totalClass}>$ {currentTotal}</td>\n            </tr>\n            <tr>\n              <th colSpan=\"3\" className=\"items-label\">\n                Items\n                <span\n                  className=\"add-item-button\"\n                  onClick={this.handleAddProduct}\n                >\n                  Add Product\n                </span>\n              </th>\n            </tr>\n            {products.length >= 1 && !isLoaded && (\n              <tr>\n                <ShoppingListProducts\n                  total={currentTotal}\n                  currentProducts={currentProducts}\n                  products={products}\n                  updateTotal={this.updateTotal}\n                />\n              </tr>\n            )}\n          </tbody>\n        </Table>\n\n        {showProductForm && (\n          <AddProductForm\n            getShoppingLists={getShoppingLists}\n            getProducts={this.getProducts}\n            handleShowProductForm={this.handleShowProductForm}\n            handleAddProduct={this.handleAddProduct}\n            shoppingList={shoppingList}\n            updateTotal={this.updateTotal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default ShoppingListShow;\n","import React, { Component } from \"react\";\nimport Api from \"../apis/api\";\nimport ShoppingListForm from \"./ShoppingListForm\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport ShoppingList from \"./ShoppingList\";\nimport ShoppingListProductShow from \"./ShoppingListProductShow\";\nimport ShoppingListShow from \"./ShoppingListShow\";\nimport ReactLoading from \"react-loading\";\nclass ShoppingListPage extends Component {\n  state = {\n    shoppingLists: null,\n    showShoppingListForm: false,\n    showShoppingListProduct: false,\n    handleShowShoppingList: false,\n    currentShoppingList: null,\n    currentProducts: [],\n\n    isLoaded: false\n  };\n\n  getShoppingLists = () => {\n    Api.get(\"shopping_list/\").then(res => {\n      const lists = res.data;\n      const id = localStorage.id;\n      let userShoppingList = lists.filter(list => {\n        if (list.user === Number(id)) {\n          return list;\n        }\n        return (list = null);\n      });\n      this.setState({\n        shoppingLists: userShoppingList,\n        isLoaded: !this.state.loaded\n      });\n    });\n  };\n\n  handleShowShoppingListForm = () => {\n    const { showShoppingListForm } = this.state;\n    this.setState({ showShoppingListForm: !showShoppingListForm });\n  };\n  handleShowShoppingList = (shoppingList, products) => {\n    const { showShoppingList } = this.state;\n\n    this.setState({\n      showShoppingList: !showShoppingList,\n      currentShoppingList: shoppingList,\n      currentProducts: products\n    });\n  };\n  componentDidMount() {\n    this.getShoppingLists();\n  }\n\n  render() {\n    const {\n      showShoppingListForm,\n      showShoppingListProduct,\n      showShoppingList,\n      shoppingLists,\n      currentShoppingList,\n      currentProducts,\n      isLoaded\n    } = this.state;\n\n    return (\n      <>\n        <div>\n          {showShoppingListForm ? (\n            <ShoppingListForm\n              handleShowShoppingListForm={this.handleShowShoppingListForm}\n              handleShowShoppingList={this.handleShowShoppingList}\n              getShoppingLists={this.getShoppingLists}\n            />\n          ) : (\n            <Container className=\"shopping-list-container\">\n              <Row>\n                <h2 className=\"shopping-list-heading\">Your Shopping Lists</h2>\n\n                <Col lg={12}>\n                  {isLoaded ? (\n                    <ShoppingList\n                      shoppingLists={shoppingLists}\n                      currentShoppingList={currentShoppingList}\n                      handleShowShoppingList={this.handleShowShoppingList}\n                      products={currentProducts}\n                      getShoppingLists={this.getShoppingLists}\n                    />\n                  ) : (\n                    <ReactLoading\n                      className=\"loading-icon\"\n                      type=\"bubbles\"\n                      color=\"#007bff\"\n                      height={367}\n                      width={175}\n                    />\n                  )}\n                </Col>\n              </Row>\n\n              <Button\n                className=\"add-list-button\"\n                onClick={this.handleShowShoppingListForm}\n              >\n                Click to add a new shopping list\n              </Button>\n\n              {showShoppingListProduct && <ShoppingListProductShow />}\n              {showShoppingList && (\n                <ShoppingListShow\n                  getShoppingLists={this.getShoppingLists}\n                  currentProducts={currentProducts}\n                  currentShoppingList={currentShoppingList}\n                  handleShowShoppingList={this.handleShowShoppingList}\n                />\n              )}\n            </Container>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ShoppingListPage;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass StoreShow extends Component {\n  destroyStore = () => {\n    const { id, getStores } = this.props;\n\n    Api.delete(`stores/${id}/`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${window.localStorage.token}`\n      }\n    })\n      .then(res => {\n        getStores();\n        console.log(\"OK\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    const { name, address, aisles, handleShowStore, store } = this.props;\n    return (\n      <Row>\n        <Col className=\"store-address\" onClick={() => handleShowStore(store)}>\n          {address}\n        </Col>\n        <Col className=\"store-name\" onClick={() => handleShowStore(store)}>\n          {name}\n        </Col>\n        <Col className=\"store-aisles\">{aisles.length}</Col>\n        <Col className=\"store-aisles\">4</Col>\n        <Col className=\"delete-store\">\n          <Button variant=\"outline-danger\" onClick={this.destroyStore}>\n            X\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default StoreShow;\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass StoreForm extends Component {\n  state = {};\n  nameRef = React.createRef();\n  addressRef = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { handleShowForm } = this.props;\n    let name = this.nameRef.current.value;\n    let address = this.addressRef.current.value;\n\n    let data = {\n      name,\n      address,\n      user: localStorage.id\n    };\n    Api.post(\"stores/\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${window.localStorage.token}`\n      }\n    })\n      .then(res => {\n        const { refreshStores } = this.props;\n        refreshStores();\n        handleShowForm();\n\n        console.log(res.statusText);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    const { handleShowForm } = this.props;\n    return (\n      <Modal.Dialog>\n        <Modal.Header>\n          <Modal.Title>Add A Store</Modal.Title>\n        </Modal.Header>\n\n        <Form>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label>Store Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter Store Name\"\n              ref={this.nameRef}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicAddress\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"address\"\n              placeholder=\"Example Road, Toronto, Ontario\"\n              ref={this.addressRef}\n            />\n          </Form.Group>\n        </Form>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleShowForm}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n\nexport default StoreForm;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass StoreProducts extends Component {\n  state = {};\n  render() {\n    const { handleShowProducts } = this.props;\n    return (\n      <Container>\n        <Button variant=\"outline-primary\" onClick={handleShowProducts}>\n          Back\n        </Button>\n        <Row>\n          <Col>\n            <h1>Products</h1>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default StoreProducts;\n","import React, { Component } from \"react\";\nimport Api from \"../apis/api\";\nclass Category extends Component {\n  state = { name: \"\", isLoaded: false };\n  getCategoryName = () => {\n    const { category } = this.props;\n    const { isLoaded } = this.state;\n    Api.get(`categories/${category}/`).then(res => {\n      const { name } = res.data;\n      this.setState({ name, isLoaded: !isLoaded });\n    });\n  };\n\n  componentDidMount() {\n    this.getCategoryName();\n  }\n  render() {\n    const { category } = this.props;\n    const { name, isLoaded } = this.state;\n    return <div>{isLoaded ? name.toUpperCase() : \" . . .\"}</div>;\n  }\n}\n\nexport default Category;\n","import React from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\nimport Category from \"./Category\";\nclass Aisle extends React.Component {\n  state = {\n    categories: [],\n    showNewCategoryForm: false\n  };\n  getCategories = () => {\n    const { aisle } = this.props;\n    Api.get(`aisles/${aisle}/`).then(res => {\n      const { categories } = res.data;\n      let currentCategories = categories.map(category => {\n        return category;\n      });\n      this.setState({ categories: currentCategories });\n    });\n  };\n  showCategories = () => {\n    const { categories } = this.state;\n    return categories.map((category, i) => {\n      return <Category key={i} category={category}></Category>;\n    });\n  };\n  handleAddCategory = () => {\n    const { showNewCategoryForm } = this.state;\n  };\n  destroyAisle = () => {\n    const { aisle } = this.props;\n\n    Api.delete(`aisles/${aisle}/`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.token}`\n      }\n    }).then(res => {\n      const { getStores } = this.props;\n      getStores();\n    });\n  };\n  componentDidMount() {\n    this.getCategories();\n  }\n  render() {\n    const { aisle } = this.props;\n    return (\n      <Row className=\"center\">\n        <Col>\n          <div className=\"aisle-container\">\n            <strong>Aisle - {aisle}</strong>\n            {this.showCategories()}\n            <Button\n              variant=\"outline-primary\"\n              onClick={this.handleAddCategory()}\n            >\n              Add Category\n            </Button>\n            <Button\n              variant=\"outline-danger\"\n              onClick={() => this.destroyAisle()}\n            >\n              X\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default Aisle;\n","import React, { Component } from \"react\";\nimport { Container, Col, Button, Row, Form, Modal } from \"react-bootstrap\";\nimport StoreProducts from \"./StoreProducts\";\nimport Api from \"../apis/api\";\nimport Aisle from \"./Aisle\";\n\nclass StorePage extends Component {\n  state = {\n    showProducts: false,\n    showAisleForm: false,\n    aisles: this.props.aisles || []\n  };\n\n  handleShowProducts = () => {\n    const { showProducts } = this.state;\n    this.setState({ showProducts: !showProducts });\n  };\n\n  handleAddAisle = () => {\n    const { showAisleForm } = this.state;\n    this.setState({ showAisleForm: !showAisleForm });\n  };\n\n  numberRef = React.createRef();\n  submitAisleForm = () => {\n    let aisleNumber = this.numberRef.current.value;\n    Api.post(\n      `aisles/`,\n      {\n        number: aisleNumber\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${localStorage.token}`\n        }\n      }\n    )\n      .then(res => {\n        const { id } = res.data;\n        this.addAislesToStore(id);\n      })\n      .catch(err => {\n        alert(err);\n      });\n  };\n\n  addAislesToStore = aisleId => {\n    const aisleNumber = this.numberRef.current.value;\n    const { id, name, address } = this.props;\n    const { aisles } = this.state;\n\n    let data = aisles.map(aisle => {\n      return aisle;\n    });\n    data.push(Number(aisleId));\n    console.log(data);\n    Api.patch(\n      `stores/${id}/`,\n      { aisles: data, name, address },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${localStorage.token}`\n        }\n      }\n    )\n      .then(res => {\n        this.getAisles();\n      })\n      .catch(err => {\n        alert(err);\n      });\n  };\n  getAisles = () => {\n    const { getStores, handleShowStore } = this.props;\n    getStores();\n    this.showAisles();\n  };\n  showAisles = () => {\n    const { aisles } = this.state;\n    const { getStores } = this.props;\n    console.log(aisles); // get right aisles\n    return aisles.map((aisle, i) => {\n      return <Aisle key={i} aisle={aisle} getStores={getStores}></Aisle>;\n    });\n  };\n  componentDidUpdate() {\n    this.showAisles();\n  }\n  render() {\n    const { showProducts, showAisleForm, aisles } = this.state;\n    const { handleShowStore, name, address } = this.props;\n\n    return (\n      <>\n        {showAisleForm && (\n          <Modal.Dialog>\n            <Modal.Header>\n              <Modal.Title>Add an Aisle</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n              <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Aisle Number</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter Aisle Number\"\n                    ref={this.numberRef}\n                  />\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleShowAisleForm}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={this.submitAisleForm}>\n                Save changes\n              </Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n        )}\n        {!showProducts ? (\n          <div>\n            <Button variant=\"outline-primary\" onClick={() => handleShowStore()}>\n              Back\n            </Button>\n\n            <Container className=\"store-page-container\">\n              <Row>\n                <Col>\n                  <h1>{name}</h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <p>{address}</p>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Button\n                    variant=\"outline-primary\"\n                    onClick={this.handleAddAisle}\n                  >\n                    Add Aisle\n                  </Button>\n                </Col>\n              </Row>\n              <Row>\n                <Col>{aisles && this.showAisles()}</Col>\n\n                {/* <Col>\n                  <strong onClick={this.handleShowProducts}>Products</strong>\n                </Col> */}\n              </Row>\n            </Container>\n          </div>\n        ) : (\n          <>\n            <StoreProducts handleShowProducts={this.handleShowProducts} />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default StorePage;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\nimport StoreShow from \"./StoreShow\";\nimport StoreForm from \"./StoreForm\";\nimport StorePage from \"./StorePage\";\nimport ReactLoading from \"react-loading\";\n\nclass Store extends Component {\n  state = {\n    stores: [],\n    showForm: false,\n    showStore: false,\n    selectedStore: null\n  };\n\n  getStores = () => {\n    Api.get(\"stores/\").then(res => {\n      let stores = res.data;\n      let usersStores = stores.filter(store => {\n        if (Number(store.user) === Number(localStorage.id)) {\n          return store;\n        }\n        return (store = null);\n      });\n\n      this.setState({ stores: usersStores });\n    });\n  };\n\n  allStores = () => {\n    const { stores, selectedStore } = this.state;\n\n    return stores.map((store, i) => (\n      <StoreShow\n        key={i}\n        {...store}\n        store={store}\n        handleShowStore={this.handleShowStore}\n        selectedStore={selectedStore}\n        getStores={this.getStores}\n      />\n    ));\n  };\n\n  selectedStore = () => {\n    const { stores, selectedStore } = this.state;\n    const { id } = selectedStore;\n    return stores.map((store, i) => {\n      if (store.id === id) {\n        return (\n          <StorePage\n            key={i}\n            {...store}\n            handleShowStore={this.handleShowStore}\n            getStores={this.getStores}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  handleShowForm = () => {\n    const { showForm } = this.state;\n    this.setState({ showForm: !showForm });\n  };\n  handleShowStore = store => {\n    const { showStore } = this.state;\n    this.setState({ showStore: !showStore, selectedStore: store });\n  };\n\n  componentDidMount() {\n    this.getStores();\n  }\n  render() {\n    const { showForm, showStore } = this.state;\n    return (\n      <Container>\n        {!showStore ? (\n          <>\n            <div className=\"store-main-heading\">\n              <p>My Stores</p>\n            </div>\n            <Row className=\"store-col-header\">\n              <Col>\n                <strong>Address</strong>\n              </Col>\n              <Col>\n                <strong>Name</strong>\n              </Col>\n\n              <Col>\n                <strong>Aisles</strong>\n              </Col>\n              <Col>\n                <strong>Products</strong>\n              </Col>\n              <Col></Col>\n            </Row>\n\n            {!showStore ? (\n              this.allStores()\n            ) : (\n              <ReactLoading\n                type=\"spokes\"\n                color=\"#007bff\"\n                height={667}\n                width={375}\n              />\n            )}\n\n            <Row>\n              <Col> </Col>\n              <Col>\n                <Button\n                  className=\"add-store\"\n                  variant=\"outline-primary\"\n                  onClick={this.handleShowForm}\n                >\n                  Add a store\n                </Button>\n              </Col>\n              <Col> </Col>\n            </Row>\n            <Row>\n              <Col> </Col>\n              <Col sm={12} md={12} lg={12}>\n                {showForm && (\n                  <StoreForm\n                    handleShowForm={this.handleShowForm}\n                    showForm={showForm}\n                    refreshStores={this.getStores}\n                  />\n                )}\n              </Col>\n              <Col> </Col>\n            </Row>\n          </>\n        ) : (\n          <>{this.selectedStore()}</>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Store;\n","import React, { Component } from \"react\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"login-form\"\n        onSubmit={e => this.props.handleLogin(e, this.state)}\n      >\n        <h4>Log In</h4>\n        <label className=\"login-username-label\" htmlFor=\"username\">\n          Username\n        </label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handleChange}\n        />\n        <label className=\"login-password-label\" htmlFor=\"password\">\n          Password\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n        />\n        {/* <button className=\"login-submit\">Submit</button> */}\n        <input className=\"login-submit\" type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\n\nclass Signup extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"signup-form\"\n        onSubmit={e => this.props.handleSignup(e, this.state)}\n      >\n        <h4>Sign Up</h4>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Api from \"../apis/api\";\nimport { Nav, Alert } from \"react-bootstrap\";\nimport { bigIntLiteral } from \"@babel/types\";\n\nclass Register extends Component {\n  state = {\n    loggedIn: localStorage.token ? true : false,\n    username: localStorage.username || null,\n    displayedForm: null\n  };\n\n  handleSignup = (e, data) => {\n    e.preventDefault();\n\n    Api.post(\"users/\", {\n      username: data.username,\n      password: data.password\n    })\n      .then(res => {\n        localStorage.token = res.data.token;\n        localStorage.id = res.data.id;\n        localStorage.username = res.data.username;\n\n        this.displayForm(\"\");\n\n        this.setState({ loggedIn: !this.state.loggedIn });\n      })\n      .catch(err => {\n        if (err.response) {\n          const status = String(err.response.status || 500);\n          this.displayForm(status);\n        }\n      });\n  };\n\n  handleLogin = (e, data) => {\n    e.preventDefault();\n    Axios.post(\"https://shop-it-quick.herokuapp.com/authenticate/\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        localStorage.token = res.data.token;\n        localStorage.id = res.data.id;\n        localStorage.username = res.data.username;\n        this.displayForm(\"\");\n        this.setState({ loggedIn: true });\n      })\n      .catch(err => {\n        this.displayForm(\"error\");\n      });\n  };\n\n  handleLogout = e => {\n    e.preventDefault();\n    localStorage.token = \"\";\n    localStorage.id = \"\";\n    localStorage.username = \"\";\n    this.displayForm(\"\");\n    this.setState({ loggedIn: false });\n  };\n\n  displayForm = form => {\n    this.setState({\n      displayedForm: form\n    });\n  };\n\n  loggedOutNav = (\n    <div className=\"login-container\">\n      <Nav.Link\n        className=\"login-button\"\n        onClick={() => this.displayForm(\"login\")}\n      >\n        Login\n      </Nav.Link>\n      <Nav.Link\n        className=\"signup-button\"\n        onClick={() => this.displayForm(\"signup\")}\n      >\n        Sign up\n      </Nav.Link>\n    </div>\n  );\n  loggedInNav = (\n    <Nav.Link className=\"logout-button\" onClick={this.handleLogout}>\n      Logout\n    </Nav.Link>\n  );\n\n  render() {\n    const { displayedForm } = this.state;\n    let form;\n    let alert;\n    switch (displayedForm) {\n      case \"login\":\n        form = <Login handleLogin={this.handleLogin} />;\n        break;\n      case \"signup\":\n        form = <Signup handleSignup={this.handleSignup} />;\n        break;\n      case \"400\":\n        alert = (\n          <Alert variant=\"danger\">\n            Something Went Wrong, Try logging in again, or refreshing the page.\n          </Alert>\n        );\n        break;\n      case \"201\":\n        alert = <Alert variant=\"danger\">That username already exists.</Alert>;\n        break;\n      case \"500\":\n        alert = (\n          <Alert variant=\"danger\">\n            Please Refresh the page if you did not get signed in automatically.\n          </Alert>\n        );\n        break;\n      default:\n        form = null;\n    }\n    return (\n      <div>\n        {alert}\n        <span className=\"logout-button-container\">\n          {this.state.loggedIn ? this.loggedInNav : this.loggedOutNav}\n        </span>\n        <span className=\"welcome-message\">{displayedForm && <>{form}</>}</span>\n        <div className=\"login-welcome\">\n          {this.state.loggedIn ? (\n            <div className=\"login-username\">\n              {\" \"}\n              {`Signed in as, ${localStorage.username\n                .slice(0, 1)\n                .toUpperCase() + localStorage.username.slice(1)}`}\n            </div>\n          ) : (\n            \"Please Log In\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\nclass Suggestions extends Component {\n  state = {\n    show: \"hide\",\n    category: \"\"\n  };\n  handleAddToList = () => {\n    // todo:::\n    //  show shopping list page\n    //  pass in the item with the add to list fn\n\n    Api.get(`shopping_list/`).then(res => {\n      console.log(res.data);\n    });\n  };\n  // getCategoryFromItem = () => {\n  //   const { food_description: suggestion } = this.props.suggestion;\n\n  //   let qReg = /[raw]/gi;\n  //   let poultry = /[chicken]/gi;\n  //   let soup = /[soup]/gi;\n  //   if (suggestion.match(qReg) || suggestion.match(poultry)) {\n  //     this.setState({\n  //       category: \"poultry\"\n  //     });\n  //   } else if (suggestion.match(soup)) {\n  //     this.setState({ category: \"soup\" });\n  //   }\n  // };\n\n  render() {\n    const { showClass } = this.props;\n    const { food_description: suggestion } = this.props.suggestion;\n    return (\n      <li className={showClass}>\n        {suggestion}\n        <Button\n          variant=\"outline-primary\"\n          className=\"add-suggestion-to-cart\"\n          onClick={() => this.handleAddToList()}\n        >\n          Add To List\n        </Button>\n      </li>\n    );\n  }\n}\n\nexport default Suggestions;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\nclass Suggestions extends Component {\n  state = {\n    show: \"hide\",\n    category: \"\"\n  };\n  handleAddToList = () => {\n    // todo:::\n    //  show shopping list page\n    //  pass in the item with the add to list fn\n\n    Api.get(`shopping_list/`).then(res => {\n      console.log(res.data);\n    });\n  };\n  // getCategoryFromItem = () => {\n  //   const { food_description: suggestion } = this.props.suggestion;\n\n  //   let qReg = /[raw]/gi;\n  //   let poultry = /[chicken]/gi;\n  //   let soup = /[soup]/gi;\n  //   if (suggestion.match(qReg) || suggestion.match(poultry)) {\n  //     this.setState({\n  //       category: \"poultry\"\n  //     });\n  //   } else if (suggestion.match(soup)) {\n  //     this.setState({ category: \"soup\" });\n  //   }\n  // };\n\n  render() {\n    const { suggestion, showClass } = this.props;\n    return (\n      <li className={showClass}>\n        {suggestion}\n        <Button\n          variant=\"outline-primary\"\n          className=\"add-suggestion-to-cart\"\n          onClick={() => this.handleAddToList()}\n        >\n          Add To List\n        </Button>\n      </li>\n    );\n  }\n}\n\nexport default Suggestions;\n","import React from \"react\";\n// import edamam from \"../apis/edamam\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Suggestions from \"./Suggestions\";\nimport RandomIngredient from \"./randomIngredient\";\n\nclass SearchPage extends React.Component {\n  state = {\n    suggestions: [],\n    searchResults: [],\n    nextItems: false,\n    resultsCategory: \"\",\n    ingredients: [],\n    displayedForm: null,\n\n    query: \"\"\n  };\n  searchRef = React.createRef();\n\n  getFoodData = prevQuery => {\n    const query = this.searchRef.current.value;\n    axios\n      .get(\n        \"https://food-nutrition.canada.ca/api/canadian-nutrient-file/food/?lang=en&type=json\"\n      )\n      .then(res => {\n        let data = res.data;\n\n        const suggestions = data.filter(d => {\n          if (\n            d.food_description.includes(query) ||\n            d.food_description.includes(prevQuery)\n          ) {\n            return d.food_description;\n          }\n        });\n        if (!suggestions) this.displayForm(\"error\");\n        this.setState({ suggestions: suggestions });\n      })\n      .catch(err => {\n        console.log(err);\n        this.displayForm(\"error\");\n      });\n  };\n  displayForm = form => {\n    this.setState({\n      displayedForm: form\n    });\n  };\n  getRandomIngredients = () => {\n    axios\n      .get(\"https://www.themealdb.com/api/json/v1/1/random.php\")\n      .then(res => {\n        let data = res.data.meals[0];\n        let ing1 = data.strIngredient1;\n        let ing2 = data.strIngredient2;\n        let ing3 = data.strIngredient3;\n        let ing4 = data.strIngredient4;\n        let ing5 = data.strIngredient5;\n        let ing6 = data.strIngredient6;\n\n        let results = [ing1, ing2, ing3, ing4, ing5, ing6];\n        this.setState({ ingredients: results });\n      });\n  };\n  showIngredients = () => {\n    const { ingredients } = this.state;\n    let suggestionElements = ingredients.map((suggestion, i) => {\n      if (ingredients !== null) {\n        return (\n          <RandomIngredient key={i} showClass=\"show\" suggestion={suggestion} />\n        );\n      }\n    });\n    return suggestionElements;\n  };\n  showSuggestions = () => {\n    const { suggestions } = this.state;\n    let suggestionElements = suggestions.map((suggestion, i) => {\n      while (i < 20) {\n        if (suggestions !== null) {\n          return (\n            <Suggestions key={i} showClass=\"show\" suggestion={suggestion} />\n          );\n        } else {\n          this.displayForm(\"error\");\n        }\n        i++;\n      }\n    });\n\n    return suggestionElements;\n  };\n  getCategoryFromItem = suggestion => {\n    let categories = [\"meat\", \"fish\", \"cereal\", \"cheese\"];\n    // filter and compare suggestions vs categories (aisle labels)\n    let qReg = /[raw]/gi;\n    let poultry = /[chicken]/gi;\n    let soup = /[soup]/gi;\n    if (suggestion.match(qReg) || suggestion.match(poultry)) {\n      this.setState({\n        resultsCategory: \"poultry\"\n      });\n    } else if (suggestion.match(soup)) {\n      this.setState({ resultsCategory: \"soup\" });\n    }\n  };\n  //   nextItems = () => {\n  //     // this.setState({ suggestions: [] });\n  //     const { nextItems } = this.state;\n  //     this.showSuggestions(10, 20);\n  //   };\n  //   handleNextItem = () => {\n  //     const { nextItems } = this.state;\n  //     this.setState({ nextItems: !nextItems });\n  //     this.nextItems();\n  //   };\n  handleSearchQuery = event => {\n    let eventData = event.target.value;\n\n    this.setState({ query: eventData });\n\n    clearTimeout();\n    setTimeout(() => {\n      this.getFoodData(eventData);\n    }, 1000);\n  };\n  render() {\n    const { displayedForm } = this.state;\n    let alert;\n    if (displayedForm === \"error\") {\n      alert = <Alert variant=\"danger\">Something Went Wrong, Try again.</Alert>;\n    }\n    return (\n      <div>\n        {alert}\n        <form className=\"search-form\" method=\"GET\">\n          <input\n            type=\"search\"\n            id=\"site-search\"\n            name=\"q\"\n            aria-label=\"Search through site content\"\n            ref={this.searchRef}\n            onChange={this.handleSearchQuery}\n            placeholder=\"Chicken...\"\n          ></input>\n          <div className=\"search-button-container\">\n            <Button\n              className=\"suggestion-button\"\n              onClick={this.getFoodData}\n              variant=\"outline-primary\"\n            >\n              Get Suggestions\n            </Button>\n            <Button\n              className=\"random-button\"\n              variant=\"outline-primary\"\n              onClick={this.getRandomIngredients}\n            >\n              Get Random Ingredients\n            </Button>\n          </div>\n        </form>\n        <div className=\"suggestion-box\">\n          <ul>{this.showSuggestions()}</ul>\n          <ul>{this.showIngredients()}</ul>\n          {/* <Button\n            onClick={() => this.handleNextItem()}\n            variant=\"outline-primary\"\n          >\n            More Related Items\n          </Button> */}\n          {/* <ul>{this.nextItems()}</ul> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React, { Component } from \"react\";\nimport ReactLoading from \"react-loading\";\n\nclass Test extends Component {\n  state = { searchResults: [] };\n  searchRef = React.createRef();\n\n  //   handleSubmit = () => {\n  //     const query = this.searchRef.current.value;\n  //     const app_id = process.env.REACT_APP_APP_ID;\n  //     const application_key = process.env.REACT_APP_APPLICATION_KEY;\n  //     console.log(application_key);\n  //     edamam\n  //       .get(`/parser?ingr=${query}&app_id=${app_id}&app_key=${application_key}`)\n  //       .then(res => {\n  //         console.log(res.statusText);\n  //         console.log(res.data);\n  //         const data = res.data.parsed[0];\n  //         const category = \"CATEGORY: \" + data.food.category;\n  //         const categoryLabel = \"CATEGORYLABEL: \" + data.food.categoryLabel;\n  //         const label = data.food.label;\n  //         let result = \"\";\n  //         // switch (category || categoryLabel || label) {\n  //         //   case \"raw\":\n  //         //     result.push(\"produce\");\n  //         //     break;\n  //         // }\n  //         if (label.includes(\"raw\")) {\n  //           result = \"raw/produce\";\n  //         }\n  //         if (label.includes(\"cereal\")) {\n  //           result = \"cereal\";\n  //         }\n  //         if (label.includes(query)) {\n  //           result = `${query} has no label`;\n  //         }\n\n  //         console.log(result);\n  //         console.log(category + categoryLabel + label);\n  //       })\n  //       .catch(err => {\n  //         console.log(err);\n  //       });\n  //   };\n\n  render() {\n    return (\n      <div>\n        {/* <form className=\"search-form\" method=\"GET\">\n          <input\n            type=\"search\"\n            id=\"site-search\"\n            name=\"q\"\n            aria-label=\"Search through site content\"\n            ref={this.searchRef}\n          ></input>\n\n          <Button\n            className=\"suggestion-button\"\n            onClick={this.getFoodData}\n            variant=\"outline-primary\"\n          >\n            Get Suggestions\n          </Button>\n        </form> */}\n        <ReactLoading type=\"bubbles\" color=\"#007bff\" height={367} width={175} />\n        ;\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport ShoppingListPage from \"./components/ShoppingListPage\";\nimport Store from \"./components/Store\";\nimport Register from \"./components/Register\";\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport SearchPage from \"./components/SearchPage\";\nimport Test from \"./components/test\";\n\nclass App extends Component {\n  state = {\n    showNavbar: false\n      ? \"navbar collapse collapse\"\n      : \"navbar collapse collapse show\"\n  };\n  toggleNavbar = () => {\n    const { showNavbar } = this.state;\n    this.setState({ showNavbar: !showNavbar });\n  };\n  render() {\n    const { showNavbar } = this.state;\n    return (\n      <Container fluid={true} className=\"App container-fluid\">\n        <Router>\n          <br />\n          <Navbar expand=\"md\" bg=\"dark\" variant=\"dark\">\n            <Nav.Item>\n              <Link to=\"/shop_it_django\">\n                <Navbar.Brand href=\"/\">Shop It</Navbar.Brand>\n              </Link>\n            </Nav.Item>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\" className={showNavbar}>\n              <Nav className=\"mr-auto collapse-links\" bg=\"dark\" variant=\"dark\">\n                <Link\n                  className=\"nav-link\"\n                  to=\"/shopping_list\"\n                  onClick={() => this.toggleNavbar()}\n                >\n                  Shopping List\n                </Link>\n\n                <Link\n                  className=\"nav-link\"\n                  to=\"/stores\"\n                  onClick={() => this.toggleNavbar()}\n                >\n                  Stores\n                </Link>\n                <Link\n                  className=\"nav-link\"\n                  to=\"/search\"\n                  onClick={() => this.toggleNavbar()}\n                >\n                  Suggestions\n                </Link>\n              </Nav>\n              <Nav>\n                <Nav.Item>\n                  <Register />\n                </Nav.Item>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <br />\n          <Switch>\n            <Route exact path=\"/shop_it_django/\">\n              <Home />\n            </Route>\n            <Route path=\"/shopping_list\">\n              <ShoppingListPage />\n            </Route>\n            {/*  if admin  */}\n            <Route exact path=\"/stores\">\n              <Store />\n            </Route>\n            <Route exact path=\"/search\">\n              <SearchPage />\n            </Route>\n            <Route exact path=\"/test\">\n              <Test />\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}