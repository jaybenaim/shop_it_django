{"version":3,"sources":["components/Home.js","apis/api.js","components/ShoppingListForm.js","components/ShoppingListRow.js","components/ShoppingList.js","components/ShoppingListProductShow.js","components/ShoppingListProducts.js","components/AddProductForm.js","components/ShoppingListShow.js","components/ShoppingListPage.js","components/StoreShow.js","components/StoreForm.js","components/StoreProducts.js","components/StorePage.js","components/Store.js","components/Login.js","components/Signup.js","components/Register.js","components/Suggestions.js","components/SearchPage.js","components/test.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","Container","className","Row","Col","href","to","React","Component","axios","create","baseURL","ShoppingListForm","budgetRef","createRef","nameRef","handleSubmit","e","preventDefault","name","current","value","budget","user","localStorage","id","props","handleShowShoppingListForm","getShoppingLists","Api","post","Number","headers","Authorization","window","token","then","res","console","log","statusText","goBack","Form","Group","controlId","Label","Control","type","placeholder","ref","this","Button","onClick","variant","ShoppingListRow","formatDate","date","days","1","2","3","4","5","6","7","8","9","0","day","split","pop","month","10","11","12","destroyShoppingList","shoppingList","delete","catch","err","handleShowShoppingList","products","length","ShoppingList","shoppingLists","shoppingListElements","map","i","key","Table","striped","bordered","hover","ShoppingListProductShow","currentProducts","price","toUpperCase","htmlFor","ShoppingListProducts","productList","total","isLoaded","getProducts","productIds","updateTotal","list","forEach","get","push","data","setState","prevState","Math","round","productElements","product","colSpan","AddProductForm","priceRef","descriptionRef","ingredientsRef","productId","getProductIds","addProduct","description","ingredients","addProductToList","listId","patch","handleShowProductForm","Modal","Dialog","show","toString","Header","Title","Body","as","rows","Footer","ShoppingListShow","showProductForm","currentTotal","currentShoppingList","totalClass","getClass","handleAddProduct","initialBudget","ShoppingListPage","showShoppingListForm","showShoppingListProduct","lists","userShoppingList","filter","loaded","showShoppingList","lg","color","height","width","StoreShow","destroyStore","getStores","address","aisles","handleShowStore","store","StoreForm","addressRef","handleShowForm","StoreProducts","handleShowProducts","StorePage","showProducts","Store","stores","showForm","showStore","selectedStore","usersStores","allStores","sm","md","Login","username","password","handleChange","target","prevstate","newState","onSubmit","handleLogin","onChange","Signup","handleSignup","Register","loggedIn","displayedForm","displayForm","Axios","handleLogout","form","loggedOutNav","loggedInNav","slice","Suggestions","handleAddToList","showClass","suggestion","food_description","SearchPage","suggestions","searchResults","nextItems","searchRef","getFoodData","query","d","includes","showSuggestions","method","aria-label","Test","App","fluid","Nav","Item","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+OAuDeA,E,2MAlDbC,MAAQ,G,wEAEN,OACE,oCACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,kBACnB,kBAACC,EAAA,EAAD,KACE,yBAAKD,UAAU,kBACb,yCAGJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKF,UAAU,wBACb,uBAAGG,KAAK,oBACN,yBAAKH,UAAU,uBAIrB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAME,GAAG,WACP,0BAAMJ,UAAU,oBAAhB,gBACA,yBAAKA,UAAU,+BAAoC,MAGvD,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAME,GAAG,kBACP,0BAAMJ,UAAU,mBAAhB,uBACA,yBAAKA,UAAU,gCAGnB,kBAACE,EAAA,EAAD,KACE,yBAAKF,UAAU,6BACb,kBAAC,IAAD,CAAMI,GAAG,WACP,0BAAMJ,UAAU,qBAAhB,WAEF,uBAAGG,KAAK,UAAUH,UAAU,oBAC1B,0BAAMA,UAAU,qBAAhB,wBAGA,uBAAGA,UAAU,2B,GAxCZK,IAAMC,W,yBCCVC,MAAMC,OAAO,CAC1BC,QAAS,6C,kBCoEIC,E,2MApEbZ,MAAQ,G,EACRa,UAAYN,IAAMO,Y,EAClBC,QAAUR,IAAMO,Y,EAEhBE,aAAe,SAAAC,GACbA,EAAEC,iBACF,IAAIC,EAAO,EAAKJ,QAAQK,QAAQC,MAC5BC,EAAS,EAAKT,UAAUO,QAAQC,MAChCE,EAAOC,aAAaC,GAJN,EAKuC,EAAKC,MAAtDC,EALU,EAKVA,2BAA4BC,EALlB,EAKkBA,iBACpCC,EAAIC,KACF,iBACA,CAAER,SAAQC,KAAMQ,OAAOR,GAAOJ,QAC9B,CACEa,QAAS,CACP,eAAgB,mBAChBC,cAAc,SAAD,OAAWC,OAAOV,aAAaW,UAGhDC,MAAK,SAAAC,GACLV,IACAC,IACAU,QAAQC,IAAIF,EAAIG,gB,EAGpBC,OAAS,WAAO,IAAD,EAC4C,EAAKf,MAAtDC,EADK,EACLA,2BAA4BC,EADvB,EACuBA,iBAEpCD,IACAC,K,wEAGQ,IAAD,OAEP,OADAU,QAAQC,IAAIf,aAAaC,IAEvB,kBAACiB,EAAA,EAAD,CAAMxC,UAAU,iBACd,kBAACwC,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,MAAN,CAAY3C,UAAU,mBAAtB,gBACA,kBAACwC,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,aACZC,IAAKC,KAAKnC,WAId,kBAAC2B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,EAAA,EAAKG,MAAN,CAAY3C,UAAU,qBAAtB,UACA,kBAACwC,EAAA,EAAKI,QAAN,CACE5C,UAAU,eACV6C,KAAK,SACLC,YAAY,oBACZC,IAAKC,KAAKrC,aAGd,kBAACsC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKX,WAA5B,QACA,kBAACU,EAAA,EAAD,CACEjD,UAAU,kBACVmD,QAAQ,UACRN,KAAK,SACLK,QAASF,KAAKlC,cAJhB,e,GAxDuBR,a,SCiGhB8C,E,2MAjGbC,WAAa,SAAAC,GACX,IAcMC,EAAO,CACXC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MAIDC,GADJZ,EAAOA,EAAKa,MAAM,MACHC,KAAK,GAChBC,EAAQf,EAAKc,KAAK,GAUtB,OATAC,EA9Be,CACbb,EAAG,UACHC,EAAG,WACHC,EAAG,QACHC,EAAG,QACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,SACHC,EAAG,YACHM,GAAI,UACJC,GAAI,WACJC,GAAI,YAkBSH,IAOQ,MALrBH,GADEA,GAAO,GACGX,EAAKW,EAAI,IAETX,EAAKW,K,EAOrBO,oBAAsB,WAAO,IACnBlD,EAAO,EAAKC,MAAMkD,aAAlBnD,GACAG,EAAqB,EAAKF,MAA1BE,iBACRC,EAAIgD,OAAJ,wBAA4BpD,EAA5B,KAAmC,CACjCO,QAAS,CACP,eAAgB,mBAChBC,cAAc,SAAD,OAAWT,aAAaW,UAGtCC,MAAK,SAAAC,GACJC,QAAQC,IAAI,yBACZX,OAEDkD,OAAM,SAAAC,GACLzC,QAAQC,IAAIwC,O,wEAGR,IAAD,EAC0C7B,KAAKxB,MAA9CkD,EADD,EACCA,aAAcI,EADf,EACeA,uBACd7D,EAAiCyD,EAAjCzD,KAAMG,EAA2BsD,EAA3BtD,OAAQ2D,EAAmBL,EAAnBK,SAAUzB,EAASoB,EAATpB,KAEhC,OACE,4BACE,4BACE,uBACEtD,UAAU,YACVkD,QAAS,kBAAM4B,EAAuBJ,EAAcK,KAEnD9D,EACD,8BAEF,kBAACgC,EAAA,EAAD,CACEjD,UAAU,qBACVmD,QAAQ,iBACRD,QAASF,KAAKyB,qBAEd,oCAEF,0BAAMzE,UAAU,aAAhB,IAA8BgD,KAAKK,WAAWC,KAGhD,iCACKlC,EACH,6BACA,gCAGF,4BACE,4BAAK2D,EAASC,c,GA3FM1E,aCyCf2E,E,2MAxCbnF,MAAQ,CACN4E,aAAc,I,sHAKN,IAAD,EAMH1B,KAAKxB,MAJP0D,EAFK,EAELA,cACAJ,EAHK,EAGLA,uBACAC,EAJK,EAILA,SACArD,EALK,EAKLA,iBAEIyD,EAAuBD,EAAcE,KAAI,SAACV,EAAcW,GAC5D,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLX,aAAcA,EAEdK,SAAUA,EACVD,uBAAwBA,EACxBpD,iBAAkBA,OAIxB,OACE,kBAAC6D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,6CACA,sCACA,uCAGJ,+BAAQP,Q,GAnCW7E,aCkBZqF,E,2MApBb7F,MAAQ,G,wEACE,IACA8F,EAAoB5C,KAAKxB,MAAzBoE,gBACA3E,EAAgB2E,EAAhB3E,KAAM4E,EAAUD,EAAVC,MACd,OACE,6BACE,yBAAK7F,UAAU,gBACb,4BAAKiB,EAAK6E,eACV,gCAAMD,IAER,0BAAM7F,UAAU,sBACd,2BAAO+F,QAAQ,SAAf,iBADF,OAEE,2BAAOlD,KAAK,WAAW1B,MAAM,WAE/B,kC,GAf8Bb,a,QC4DvB0F,E,2MAxDblG,MAAQ,CACNmG,YAAa,GACbC,MAAOrE,OAAO,EAAKL,MAAM0E,OACzBC,UAAU,G,EAGZC,YAAc,WAAO,IAAD,EAC4B,EAAK5E,MAAjC6E,EADA,EACVtB,SAAsBuB,EADZ,EACYA,YACxBC,EAAO,GAEbF,EAAWG,SAAQ,SAAAjF,GACjBI,EAAI8E,IAAJ,mBAAoBlF,EAApB,MACGW,MAAK,SAAAC,GACJoE,EAAKG,KAAKvE,EAAIwE,MAEd,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLX,MAAOY,KAAKC,MAA2C,KAApCF,EAAUX,MAAQ/D,EAAIwE,KAAKd,QAAgB,WAInE3D,MAAK,SAAAC,GACJ,EAAKyE,SAAS,CACZX,YAAaM,IAEfD,EAAY,EAAKxG,MAAMoG,c,mFAM7BlD,KAAKoD,gB,+BAGG,IAAD,EACkCpD,KAAKlD,MAAtCmG,EADD,EACCA,YAAaE,EADd,EACcA,SAAUD,EADxB,EACwBA,MAE3Bc,EAAkBf,EAAYb,KAChC,SAAC6B,EAAS5B,GAAV,OACGc,GACC,kBAAC,EAAD,CACEb,IAAKD,EACLO,gBAAiBqB,EACjBf,MAAOA,OAKf,OACE,wBAAIgB,QAAQ,IAAIlH,UAAU,0BACvBgH,O,GAnD0B1G,a,SCkJpB6G,E,2MAjJbtG,QAAUR,IAAMO,Y,EAChBwG,SAAW/G,IAAMO,Y,EACjByG,eAAiBhH,IAAMO,Y,EACvB0G,eAAiBjH,IAAMO,Y,EAEvBd,MAAQ,CACNyH,UAAW,GACXpB,UAAU,G,EAMZqB,cAAgB,WAAO,IACbzC,EAAa,EAAKvD,MAAMkD,aAAxBK,SACR3C,QAAQC,IAAI0C,I,EAEd0C,WAAa,WACX,IAAMxG,EAAO,EAAKJ,QAAQK,QAAQC,MAC5B0E,EAAQ,EAAKuB,SAASlG,QAAQC,MAChCuG,EAAc,EAAKL,eAAenG,QAAQC,MAC1CwG,EAAc,EAAKL,eAAepG,QAAQC,MAEtCgF,EAAa,EAAKrG,MAAlBqG,SAEHuB,IACHA,EAAc,OAEXC,IACHA,EAAc,OAGhB,IAAMhB,EAAO,CAAE1F,OAAM4E,QAAO6B,cAAaC,eAEzChG,EAAIC,KAAK,YAAa+E,EAAM,CAC1B7E,QAAS,CACP,eAAgB,mBAChBC,cAAc,SAAD,OAAWT,aAAaW,UAGtCC,MAAK,SAAAC,GAAQ,IACJZ,EAAOY,EAAIwE,KAAXpF,GACR,EAAKqG,iBAAiBrG,GACtB,EAAKqF,SAAS,CAAEW,UAAWhG,EAAI4E,UAAWA,IAC1C/D,QAAQC,IAAIF,EAAIG,eAEjBsC,OAAM,SAAAC,GACLzC,QAAQC,IAAI,UAAYwC,O,EAI9B+C,iBAAmB,SAAAL,GAAc,IACvBpB,EAAa,EAAKrG,MAAlBqG,SACAzE,EAAqB,EAAKF,MAA1BE,iBAFsB,EAGG,EAAKF,MAAMkD,aAAhCmD,EAHkB,EAGtBtG,GAAYwD,EAHU,EAGVA,SAChB4B,EAAO,CACT5B,SAAS,GAAD,mBAAMA,GAAN,CAAgBlD,OAAO0F,MAEjC5F,EAAImG,MAAJ,wBAA2BD,EAA3B,KAAsClB,EAAM,CAC1C7E,QAAS,CACP,eAAgB,mBAChBC,cAAc,SAAD,OAAWT,aAAaW,UAEtCC,MAAK,SAAAC,GACN,EAAKyE,SAAS,CAAET,UAAWA,IAC3BzE,Q,EAIJZ,aAAe,WAAO,IAAD,EACiC,EAAKU,MAAjDuG,EADW,EACXA,sBAAuBrG,EADZ,EACYA,iBAE/B,EAAK+F,aACL/F,IACAqG,K,wEAEQ,IAAD,EACyC/E,KAAKxB,MAA7CkD,EADD,EACCA,aAAcqD,EADf,EACeA,sBACdxG,EAAOmD,EAAPnD,GAER,OACE,kBAACyG,EAAA,EAAMC,OAAP,CAAcC,KAAMH,EAAsBI,YACxC,kBAACH,EAAA,EAAMI,OAAP,KACE,kBAACJ,EAAA,EAAMK,MAAP,uCAA6C9G,IAG/C,kBAACyG,EAAA,EAAMM,KAAP,KACE,kBAAC9F,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKvC,IAAN,KACE,kBAACuC,EAAA,EAAKC,MAAN,CAAY8F,GAAIrI,IAAKwC,UAAU,gBAC7B,kBAACF,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,aACZC,IAAKC,KAAKnC,WAId,kBAAC2B,EAAA,EAAKC,MAAN,CAAY8F,GAAIrI,IAAKwC,UAAU,iBAC7B,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,SACLC,YAAY,OACZC,IAAKC,KAAKoE,aAKhB,kBAAC5E,EAAA,EAAKC,MAAN,CAAY8F,GAAItI,IAAKyC,UAAU,kCAC7B,kBAACF,EAAA,EAAKG,MAAN,CAAY3C,UAAU,oBAAtB,eACA,kBAACwC,EAAA,EAAKI,QAAN,CACE5C,UAAU,mBACVuI,GAAG,WACHC,KAAK,IACLzF,IAAKC,KAAKqE,eACVvE,YAAY,SAIhB,kBAACN,EAAA,EAAKC,MAAN,CAAY8F,GAAItI,IAAKyC,UAAU,kCAC7B,kBAACF,EAAA,EAAKG,MAAN,CAAY3C,UAAU,oBAAtB,eACA,kBAACwC,EAAA,EAAKI,QAAN,CACE5C,UAAU,mBACVuI,GAAG,WACHC,KAAK,IACLzF,IAAKC,KAAKsE,eACVxE,YAAY,WAMpB,kBAACkF,EAAA,EAAMS,OAAP,KACE,kBAACxF,EAAA,EAAD,CAAQE,QAAQ,YAAYD,QAAS6E,GAArC,SAGA,kBAAC9E,EAAA,EAAD,CAAQE,QAAQ,UAAUD,QAASF,KAAKlC,cAAxC,sB,GAzImBR,aC6HdoI,E,2MA3Hb5I,MAAQ,CACN6I,iBAAiB,EACjBC,aAAc,EAAKpH,MAAMqH,oBAAoBzH,OAC7C+E,UAAU,EACVpB,SAAU,GACV+D,WAAY,M,EAGdC,SAAW,WAAO,IACVH,EAAiB,EAAK9I,MAAtB8I,aAGN,OAFAA,EAAe/G,OAAO+G,KAGH,GAAKA,GAAgB,IAAMA,GAAgB,GAC5DA,GAAgB,EAET,SACEA,GAAgB,IAAMA,GAAgB,GACxC,UAEA,U,EAGXxC,YAAc,WAAO,IACMC,EAAe,EAAK7E,MAArCoE,gBACAO,EAAa,EAAKrG,MAAlBqG,SACRE,EAAWG,SAAQ,SAAAjF,GACjBI,EAAI8E,IAAJ,mBAAoBlF,EAApB,MAA2BW,MAAK,SAAAC,GAAQ,IAC9B4C,EAAa,EAAKjF,MAAlBiF,SACR,EAAK6B,SAAS,CACZ7B,SAAS,GAAD,mBAAMA,GAAN,CAAgB5C,EAAIwE,OAC5BR,UAAWA,UAIjB,EAAKS,SAAS,CAAET,UAAWA,K,EAE7B6C,iBAAmB,WAAO,IAChBtH,EAAqB,EAAKF,MAA1BE,iBACR,EAAKqG,wBACLrG,IACA,EAAK0E,e,EAGP2B,sBAAwB,WAAO,IACrBY,EAAoB,EAAK7I,MAAzB6I,gBACR,EAAK/B,SAAS,CAAE+B,iBAAkBA,K,EAEpCrC,YAAc,SAAAJ,GACZ,EAAKU,SAAS,CACZgC,aAAc1C,K,sHAQR,IAAD,EACyDlD,KAAKlD,MAA7D6I,EADD,EACCA,gBAAiBC,EADlB,EACkBA,aAAczC,EADhC,EACgCA,SAAU2C,EAD1C,EAC0CA,WAD1C,EAMH9F,KAAKxB,MAHckD,EAHhB,EAGLmE,oBACAjD,EAJK,EAILA,gBACAlE,EALK,EAKLA,iBAEMT,EAA0CyD,EAA1CzD,KAAcgI,EAA4BvE,EAApCtD,OAAuB2D,EAAaL,EAAbK,SACrC,OACE,oCACE,kBAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,6CACA,+CACA,gDAGJ,+BACE,4BACE,4BACE,8BAAOzE,GAAa,KAEtB,iCAAOgI,GACP,wBAAIjJ,UAAW8I,GAAf,KAA8BF,IAEhC,4BACE,wBAAI1B,QAAQ,IAAIlH,UAAU,eAA1B,QAEE,0BACEA,UAAU,kBACVkD,QAASF,KAAKgG,kBAFhB,iBAQHjE,EAASC,QAAU,IAAMmB,GACxB,4BACE,kBAAC,EAAD,CACED,MAAO0C,EACPhD,gBAAiBA,EACjBb,SAAUA,EACVuB,YAAatD,KAAKsD,iBAO3BqC,GACC,kBAAC,EAAD,CACEjH,iBAAkBA,EAClB0E,YAAapD,KAAKoD,YAClB2B,sBAAuB/E,KAAK+E,sBAC5BiB,iBAAkBhG,KAAKgG,iBACvBtE,aAAcA,EACd4B,YAAatD,KAAKsD,mB,GApHChG,a,iBCuHhB4I,E,2MAnHbpJ,MAAQ,CACNoF,cAAe,KACfiE,sBAAsB,EACtBC,yBAAyB,EACzBtE,wBAAwB,EACxB+D,oBAAqB,KACrBjD,gBAAiB,GAEjBO,UAAU,G,EAGZzE,iBAAmB,WACjBC,EAAI8E,IAAI,kBAAkBvE,MAAK,SAAAC,GAC7B,IAAMkH,EAAQlH,EAAIwE,KACZpF,EAAKD,aAAaC,GACpB+H,EAAmBD,EAAME,QAAO,SAAAhD,GAClC,OAAIA,EAAKlF,OAASQ,OAAON,GAChBgF,EAEM,QAEjB,EAAKK,SAAS,CACZ1B,cAAeoE,EACfnD,UAAW,EAAKrG,MAAM0J,a,EAK5B/H,2BAA6B,WAAO,IAC1B0H,EAAyB,EAAKrJ,MAA9BqJ,qBACR,EAAKvC,SAAS,CAAEuC,sBAAuBA,K,EAEzCrE,uBAAyB,SAACJ,EAAcK,GAAc,IAC5C0E,EAAqB,EAAK3J,MAA1B2J,iBAER,EAAK7C,SAAS,CACZ6C,kBAAmBA,EACnBZ,oBAAqBnE,EACrBkB,gBAAiBb,K,mFAInB/B,KAAKtB,qB,+BAGG,IAAD,EASHsB,KAAKlD,MAPPqJ,EAFK,EAELA,qBACAC,EAHK,EAGLA,wBACAK,EAJK,EAILA,iBACAvE,EALK,EAKLA,cACA2D,EANK,EAMLA,oBACAjD,EAPK,EAOLA,gBACAO,EARK,EAQLA,SAGF,OACE,oCACE,6BACGgD,EACC,kBAAC,EAAD,CACE1H,2BAA4BuB,KAAKvB,2BACjCqD,uBAAwB9B,KAAK8B,uBAC7BpD,iBAAkBsB,KAAKtB,mBAGzB,kBAAC3B,EAAA,EAAD,CAAWC,UAAU,2BACnB,kBAACC,EAAA,EAAD,KACE,wBAAID,UAAU,yBAAd,uBAEA,kBAACE,EAAA,EAAD,CAAKwJ,GAAI,IACNvD,EACC,kBAAC,EAAD,CACEjB,cAAeA,EACf2D,oBAAqBA,EACrB/D,uBAAwB9B,KAAK8B,uBAC7BC,SAAUa,EACVlE,iBAAkBsB,KAAKtB,mBAGzB,kBAAC,IAAD,CACE1B,UAAU,eACV6C,KAAK,UACL8G,MAAM,UACNC,OAAQ,IACRC,MAAO,QAMf,kBAAC5G,EAAA,EAAD,CACEjD,UAAU,kBACVkD,QAASF,KAAKvB,4BAFhB,oCAOC2H,GAA2B,kBAAC,EAAD,MAC3BK,GACC,kBAAC,EAAD,CACE/H,iBAAkBsB,KAAKtB,iBACvBkE,gBAAiBA,EACjBiD,oBAAqBA,EACrB/D,uBAAwB9B,KAAK8B,gC,GAzGhBxE,aCoChBwJ,E,2MAvCbC,aAAe,WAAO,IAAD,EACO,EAAKvI,MAAvBD,EADW,EACXA,GAAIyI,EADO,EACPA,UAEZrI,EAAIgD,OAAJ,iBAAqBpD,EAArB,KAA4B,CAC1BO,QAAS,CACP,eAAgB,mBAChBC,cAAc,SAAD,OAAWC,OAAOV,aAAaW,UAG7CC,MAAK,SAAAC,GACJ6H,IACA5H,QAAQC,IAAI,SAEbuC,OAAM,SAAAC,GACLzC,QAAQC,IAAIwC,O,wEAGR,IAAD,EACmD7B,KAAKxB,MAAvDP,EADD,EACCA,KAAMgJ,EADP,EACOA,QAASC,EADhB,EACgBA,OAAQC,EADxB,EACwBA,gBAAiBC,EADzC,EACyCA,MAChD,OACE,kBAACnK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKF,UAAU,gBAAgBkD,QAAS,kBAAMiH,EAAgBC,KAC3DH,GAEH,kBAAC/J,EAAA,EAAD,CAAKF,UAAU,aAAakD,QAAS,kBAAMiH,EAAgBC,KACxDnJ,GAEH,kBAACf,EAAA,EAAD,CAAKF,UAAU,gBAAgBkK,EAAOlF,QACtC,kBAAC9E,EAAA,EAAD,CAAKF,UAAU,gBAAf,KACA,kBAACE,EAAA,EAAD,CAAKF,UAAU,gBACb,kBAACiD,EAAA,EAAD,CAAQE,QAAQ,iBAAiBD,QAASF,KAAK+G,cAA/C,W,GA/BczJ,aCuET+J,E,2MAtEbvK,MAAQ,G,EACRe,QAAUR,IAAMO,Y,EAChB0J,WAAajK,IAAMO,Y,EAEnBE,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAEVuJ,EAAmB,EAAK/I,MAAxB+I,eAIJ5D,EAAO,CACT1F,KAJS,EAAKJ,QAAQK,QAAQC,MAK9B8I,QAJY,EAAKK,WAAWpJ,QAAQC,MAKpCE,KAAMC,aAAaC,IAErBI,EAAIC,KAAK,UAAW+E,EAAM,CACxB7E,QAAS,CACP,eAAgB,mBAChBC,cAAc,SAAD,OAAWC,OAAOV,aAAaW,UAG7CC,MAAK,SAAAC,GACJoI,IACAnI,QAAQC,IAAIF,EAAIG,eAEjBsC,OAAM,SAAAC,GACLzC,QAAQC,IAAIwC,O,wEAGR,IACA0F,EAAmBvH,KAAKxB,MAAxB+I,eACR,OACE,kBAACvC,EAAA,EAAMC,OAAP,KACE,kBAACD,EAAA,EAAMI,OAAP,KACE,kBAACJ,EAAA,EAAMK,MAAP,qBAGF,kBAAC7F,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBACpB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,mBACZC,IAAKC,KAAKnC,WAId,kBAAC2B,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBACpB,kBAACF,EAAA,EAAKG,MAAN,gBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,UACLC,YAAY,iCACZC,IAAKC,KAAKsH,eAKhB,kBAACtC,EAAA,EAAMS,OAAP,KACE,kBAACxF,EAAA,EAAD,CAAQE,QAAQ,YAAYD,QAASqH,GAArC,SAGA,kBAACtH,EAAA,EAAD,CAAQE,QAAQ,UAAUD,QAASF,KAAKlC,cAAxC,sB,GA9DcR,aCkBTkK,E,2MAlBb1K,MAAQ,G,wEACE,IACA2K,EAAuBzH,KAAKxB,MAA5BiJ,mBACR,OACE,kBAAC1K,EAAA,EAAD,KACE,kBAACkD,EAAA,EAAD,CAAQE,QAAQ,kBAAkBD,QAASuH,GAA3C,QAGA,kBAACxK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,+C,GAXgBI,aC4DboK,E,2MA1Db5K,MAAQ,CACN6K,cAAc,G,EAEhBF,mBAAqB,WAAO,IAClBE,EAAiB,EAAK7K,MAAtB6K,aACR,EAAK/D,SAAS,CAAE+D,cAAeA,K,wEAGvB,IACAA,EAAiB3H,KAAKlD,MAAtB6K,aADD,EAGoC3H,KAAKxB,MAAxC2I,EAHD,EAGCA,gBAAiBlJ,EAHlB,EAGkBA,KAAMgJ,EAHxB,EAGwBA,QAC/B,OACE,oCACIU,EAmCA,oCACE,kBAAC,EAAD,CAAeF,mBAAoBzH,KAAKyH,sBAnC1C,6BACE,kBAACxH,EAAA,EAAD,CAAQE,QAAQ,kBAAkBD,QAAS,kBAAMiH,MAAjD,QAGA,kBAACpK,EAAA,EAAD,CAAWC,UAAU,wBACnB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BAAKe,KAGT,kBAAChB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,2BAAI+J,KAGR,kBAAChK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,2CAEF,kBAACA,EAAA,EAAD,KACE,+CAEF,kBAACA,EAAA,EAAD,KACE,4BAAQgD,QAASF,KAAKyH,oBAAtB,cAGJ,kBAACxK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,6B,GA7CQI,aCiJTsK,E,2MA5Ib9K,MAAQ,CACN+K,OAAQ,GACRC,UAAU,EACVC,WAAW,EACXC,cAAe,M,EAGjBhB,UAAY,WACVrI,EAAI8E,IAAI,WAAWvE,MAAK,SAAAC,GACtBC,QAAQC,IAAIF,EAAIwE,MAChB,IACIsE,EADS9I,EAAIwE,KACQ4C,QAAO,SAAAa,GAC9B,OAAIvI,OAAOuI,EAAM/I,QAAUQ,OAAOP,aAAaC,IACtC6I,EAEO,QAGlB,EAAKxD,SAAS,CAAEiE,OAAQI,Q,EAI5BC,UAAY,WAAO,IAAD,EACkB,EAAKpL,MAA/B+K,EADQ,EACRA,OAAQG,EADA,EACAA,cAEhB,OAAOH,EAAOzF,KAAI,SAACgF,EAAO/E,GAAR,OAChB,kBAAC,EAAD,eACEC,IAAKD,GACD+E,EAFN,CAGEA,MAAOA,EACPD,gBAAiB,EAAKA,gBACtBa,cAAeA,EACfhB,UAAW,EAAKA,iB,EAKtBgB,cAAgB,WAAO,IAAD,EACc,EAAKlL,MAA/B+K,EADY,EACZA,OACAtJ,EAFY,EACJyJ,cACRzJ,GACR,OAAOsJ,EAAOzF,KAAI,SAACgF,EAAO/E,GACxB,OAAI+E,EAAM7I,KAAOA,EAEb,kBAAC,EAAD,eACE+D,IAAKD,GACD+E,EAFN,CAGED,gBAAiB,EAAKA,mBAInB,S,EAKbI,eAAiB,WAAO,IACdO,EAAa,EAAKhL,MAAlBgL,SACR,EAAKlE,SAAS,CAAEkE,UAAWA,K,EAE7BX,gBAAkB,SAAAC,GAAU,IAClBW,EAAc,EAAKjL,MAAnBiL,UACR,EAAKnE,SAAS,CAAEmE,WAAYA,EAAWC,cAAeZ,K,mFAItDpH,KAAKgH,c,+BAEG,IAAD,EACyBhH,KAAKlD,MAA7BgL,EADD,EACCA,SAAUC,EADX,EACWA,UAClB,OACE,kBAAChL,EAAA,EAAD,KACIgL,EA8DA,oCAAG/H,KAAKgI,iBA7DR,oCACE,yBAAKhL,UAAU,sBACb,yCAGF,kBAACC,EAAA,EAAD,CAAKD,UAAU,oBACb,kBAACE,EAAA,EAAD,KACE,4CAEF,kBAACA,EAAA,EAAD,KACE,yCAGF,kBAACA,EAAA,EAAD,KACE,2CAEF,kBAACA,EAAA,EAAD,KACE,6CAEF,kBAACA,EAAA,EAAD,OAGA6K,EAGA,kBAAC,IAAD,CACElI,KAAK,SACL8G,MAAM,UACNC,OAAQ,IACRC,MAAO,MANT7G,KAAKkI,YAUP,kBAACjL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,KACE,kBAAC+C,EAAA,EAAD,CACEjD,UAAU,YACVmD,QAAQ,kBACRD,QAASF,KAAKuH,gBAHhB,gBAQF,kBAACrK,EAAA,EAAD,WAEF,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,CAAKiL,GAAI,GAAIC,GAAI,GAAI1B,GAAI,IACtBoB,GACC,kBAAC,EAAD,CACEP,eAAgBvH,KAAKuH,eACrBO,SAAUA,KAIhB,kBAAC5K,EAAA,EAAD,iB,GAjIMI,a,0OCyCL+K,E,2MA9CbvL,MAAQ,CACNwL,SAAU,GACVC,SAAU,I,EAGZC,aAAe,SAAAzK,GACb,IAAME,EAAOF,EAAE0K,OAAOxK,KAChBE,EAAQJ,EAAE0K,OAAOtK,MACvB,EAAKyF,UAAS,SAAA8E,GACZ,IAAMC,E,yVAAQ,IAAQD,GAEtB,OADAC,EAAS1K,GAAQE,EACVwK,M,wEAID,IAAD,OACP,OACE,0BACE3L,UAAU,aACV4L,SAAU,SAAA7K,GAAC,OAAI,EAAKS,MAAMqK,YAAY9K,EAAG,EAAKjB,SAE9C,sCACA,2BAAOE,UAAU,uBAAuB+F,QAAQ,YAAhD,YAGA,2BACElD,KAAK,OACL5B,KAAK,WACLE,MAAO6B,KAAKlD,MAAMwL,SAClBQ,SAAU9I,KAAKwI,eAEjB,2BAAOxL,UAAU,uBAAuB+F,QAAQ,YAAhD,YAGA,2BACElD,KAAK,WACL5B,KAAK,WACLE,MAAO6B,KAAKlD,MAAMyL,SAClBO,SAAU9I,KAAKwI,eAEjB,2BAAOxL,UAAU,eAAe6C,KAAK,gB,GAzCzBvC,a,kOC2CLyL,E,2MA1CbjM,MAAQ,CACNwL,SAAU,GACVC,SAAU,I,EAGZC,aAAe,SAAAzK,GACb,IAAME,EAAOF,EAAE0K,OAAOxK,KAChBE,EAAQJ,EAAE0K,OAAOtK,MACvB,EAAKyF,UAAS,SAAA8E,GACZ,IAAMC,E,yVAAQ,IAAQD,GAEtB,OADAC,EAAS1K,GAAQE,EACVwK,M,wEAID,IAAD,OACP,OACE,0BACE3L,UAAU,cACV4L,SAAU,SAAA7K,GAAC,OAAI,EAAKS,MAAMwK,aAAajL,EAAG,EAAKjB,SAE/C,uCACA,2BAAOiG,QAAQ,YAAf,YACA,2BACElD,KAAK,OACL5B,KAAK,WACLE,MAAO6B,KAAKlD,MAAMwL,SAClBQ,SAAU9I,KAAKwI,eAEjB,2BAAOzF,QAAQ,YAAf,YACA,2BACElD,KAAK,WACL5B,KAAK,WACLE,MAAO6B,KAAKlD,MAAMyL,SAClBO,SAAU9I,KAAKwI,eAEjB,2BAAO3I,KAAK,gB,GArCCxC,IAAMC,WC6HZ2L,E,2MAxHbnM,MAAQ,CACNoM,WAAU5K,aAAaW,MACvBqJ,SAAUhK,aAAagK,UAAY,KACnCa,cAAe,M,EAGjBH,aAAe,SAACjL,EAAG4F,GACjB5F,EAAEC,iBACFW,EAAIC,KAAK,SAAU,CACjB0J,SAAU3E,EAAK2E,SACfC,SAAU5E,EAAK4E,WAEdrJ,MAAK,SAAAC,GACJb,aAAaW,MAAQE,EAAIwE,KAAK1E,MAC9BX,aAAaC,GAAKY,EAAIwE,KAAKpF,GAC3BD,aAAagK,SAAWnJ,EAAIwE,KAAK2E,SACjClJ,QAAQC,IAAIF,EAAIG,YAChB,EAAK8J,YAAY,IACjB,EAAKxF,SAAS,CAAEsF,UAAU,OAE3BtH,OAAM,SAAAC,GACLzC,QAAQC,IAAIwC,O,EAIlBgH,YAAc,SAAC9K,EAAG4F,GAChB5F,EAAEC,iBACFqL,IAAMzK,KAAK,oDAAqD+E,EAAM,CACpE7E,QAAS,CACP,eAAgB,sBAGjBI,MAAK,SAAAC,GACJb,aAAaW,MAAQE,EAAIwE,KAAK1E,MAC9BX,aAAaC,GAAKY,EAAIwE,KAAKpF,GAC3BD,aAAagK,SAAWnJ,EAAIwE,KAAK2E,SACjClJ,QAAQC,IAAIF,EAAIG,YAChB,EAAK8J,YAAY,IACjB,EAAKxF,SAAS,CAAEsF,UAAU,OAE3BtH,OAAM,SAAAC,GACLzC,QAAQC,IAAIwC,O,EAIlByH,aAAe,SAAAvL,GACbA,EAAEC,iBACFM,aAAaW,MAAQ,GACrBX,aAAaC,GAAK,GAClBD,aAAagK,SAAW,GACxB,EAAKc,YAAY,IACjB,EAAKxF,SAAS,CAAEsF,UAAU,K,EAG5BE,YAAc,SAAAG,GACZ,EAAK3F,SAAS,CACZuF,cAAeI,K,EAInBC,aACE,yBAAKxM,UAAU,UACb,4BACE,wBAAIA,UAAU,gBAAgBkD,QAAS,kBAAM,EAAKkJ,YAAY,WAA9D,SAIA,wBACEpM,UAAU,iBACVkD,QAAS,kBAAM,EAAKkJ,YAAY,YAFlC,Y,EASNK,YACE,4BACEzM,UAAU,wCACVkD,QAAS,EAAKoJ,cAFhB,U,wEAQQ,IAEJC,EADIJ,EAAkBnJ,KAAKlD,MAAvBqM,cAER,OAAQnJ,KAAKlD,MAAMqM,eACjB,IAAK,QACHI,EAAO,kBAAC,EAAD,CAAOV,YAAa7I,KAAK6I,cAChC,MACF,IAAK,SACHU,EAAO,kBAAC,EAAD,CAAQP,aAAchJ,KAAKgJ,eAClC,MACF,QACEO,EAAO,KAEX,OACE,6BACE,0BAAMvM,UAAU,2BACbgD,KAAKlD,MAAMoM,SAAWlJ,KAAKyJ,YAAczJ,KAAKwJ,cAEjD,0BAAMxM,UAAU,mBAAmBmM,GAAiB,oCAAGI,IACvD,yBAAKvM,UAAU,iBACZgD,KAAKlD,MAAMoM,SACV,yBAAKlM,UAAU,kBACZ,IADH,iBAEasB,aAAagK,SAASoB,MAAM,EAAG,GAAG5G,cAC3CxE,aAAagK,SAASoB,MAAM,KAGhC,sB,GAjHWpM,a,SC4BRqM,E,2MA9Bb7M,MAAQ,CACNoI,KAAM,Q,EAER0E,gBAAkB,WAKhBjL,EAAI8E,IAAJ,kBAA0BvE,MAAK,SAAAC,GAC7BC,QAAQC,IAAIF,EAAIwE,U,wEAGV,IAAD,OACCkG,EAAc7J,KAAKxB,MAAnBqL,UACkBC,EAAe9J,KAAKxB,MAAMsL,WAA5CC,iBACR,OACE,wBAAI/M,UAAW6M,GACZC,EACD,kBAAC7J,EAAA,EAAD,CACEE,QAAQ,kBACRnD,UAAU,yBACVkD,QAAS,kBAAM,EAAK0J,oBAHtB,oB,GAnBkBtM,aCsFX0M,E,2MAlFblN,MAAQ,CACNmN,YAAa,GACbC,cAAe,GACfC,WAAW,G,EAEbC,UAAY/M,IAAMO,Y,EAElByM,YAAc,WACZ,IAAMC,EAAQ,EAAKF,UAAUlM,QAAQC,MACrCZ,IACGkG,IACC,uFAEDvE,MAAK,SAAAC,GACJ,IACM8K,EADK9K,EAAIwE,KACU4C,QAAO,SAAAgE,GAC9B,GAAIA,EAAER,iBAAiBS,SAASF,GAC9B,OAAOC,EAAER,oBAGb,EAAKnG,SAAS,CAAEqG,YAAaA,Q,EAInCQ,gBAAkB,WAAO,IACfR,EAAgB,EAAKnN,MAArBmN,YAUR,OATyBA,EAAY7H,KAAI,SAAC0H,EAAYzH,GACpD,KAAOA,EAAI,IACT,GAAoB,OAAhB4H,EACF,OACE,kBAAC,EAAD,CAAa3H,IAAKD,EAAGwH,UAAU,OAAOC,WAAYA,Q,wEAkB1D,OACE,6BACE,0BAAM9M,UAAU,cAAc0N,OAAO,OACnC,2BACE7K,KAAK,SACLtB,GAAG,cACHN,KAAK,IACL0M,aAAW,8BACX5K,IAAKC,KAAKoK,YAGZ,kBAACnK,EAAA,EAAD,CACEjD,UAAU,oBACVkD,QAASF,KAAKqK,YACdlK,QAAQ,mBAHV,oBAQF,yBAAKnD,UAAU,kBACb,4BAAKgD,KAAKyK,gBAAgB,EAAG,W,GArEdpN,IAAMC,WCkEhBsN,E,2MApEb9N,MAAQ,CAAEoN,cAAe,I,EACzBE,UAAY/M,IAAMO,Y,wEAyChB,OACE,6BAkBE,kBAAC,IAAD,CAAciC,KAAK,UAAU8G,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAlBnE,S,GA5CavJ,aCqDJuN,MA7Cf,WACE,OACE,kBAAC9N,EAAA,EAAD,CAAW+N,OAAO,EAAM9N,UAAU,iBAChC,kBAAC,IAAD,KACE,kBAAC+N,EAAA,EAAD,CAAK/N,UAAU,iCACb,kBAAC+N,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAM5N,GAAG,mBAAT,SAEF,kBAAC2N,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAM5N,GAAG,kBAAT,mBAEF,kBAAC2N,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAM5N,GAAG,WAAT,aAEF,kBAAC2N,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAM5N,GAAG,WAAT,kBAEF,kBAAC2N,EAAA,EAAIC,KAAL,KACE,kBAAC,EAAD,QAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,oBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,kBACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAChB,kBAAC,EAAD,WCpCQC,QACW,cAA7BnM,OAAOoM,SAASC,UAEe,UAA7BrM,OAAOoM,SAASC,UAEhBrM,OAAOoM,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3M,MAAK,SAAA4M,GACjCA,EAAaC,iB","file":"static/js/main.51a7bd3b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nclass Home extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Container className=\"home-container\">\n          <Row>\n            <div className=\"welcome-header\">\n              <h1>Shop It</h1>\n            </div>\n          </Row>\n          <Row>\n            <Col className=\"home-image-container\">\n              <a href=\"/shop_it_django/\">\n                <div className=\"home-image-cart\"></div>\n              </a>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Link to=\"/stores\">\n                <span className=\"home-store-label\">View Stores </span>\n                <div className=\"home-store-image-container\"></div>{\" \"}\n              </Link>\n            </Col>\n            <Col>\n              <Link to=\"/shopping_list\">\n                <span className=\"home-list-label\">View Shopping Lists</span>\n                <div className=\"home-list-image-container\"></div>\n              </Link>\n            </Col>\n            <Col>\n              <div className=\"home-search-box-container\">\n                <Link to=\"/search\">\n                  <span className=\"home-search-label\">Search</span>\n                </Link>\n                <a href=\"/search\" className=\"home-search-icon\">\n                  <span className=\"search-icon-label\">\n                    Search for a product\n                  </span>\n                  <i className=\"fa fa-search\"></i>\n                </a>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import axios from \"axios\";\n\n// axios.defaults.xsrfCookieName = \"csrftoken\";\n// axios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nexport default axios.create({\n  baseURL: \"https://shop-it-quick.herokuapp.com/api/\"\n  // baseURL: \"http://localhost:8000/api/\"\n});\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass ShoppingListForm extends Component {\n  state = {};\n  budgetRef = React.createRef();\n  nameRef = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let name = this.nameRef.current.value;\n    let budget = this.budgetRef.current.value;\n    let user = localStorage.id;\n    const { handleShowShoppingListForm, getShoppingLists } = this.props;\n    Api.post(\n      \"shopping_list/\",\n      { budget, user: Number(user), name },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${window.localStorage.token}`\n        }\n      }\n    ).then(res => {\n      handleShowShoppingListForm();\n      getShoppingLists();\n      console.log(res.statusText);\n    });\n  };\n  goBack = () => {\n    const { handleShowShoppingListForm, getShoppingLists } = this.props;\n\n    handleShowShoppingListForm();\n    getShoppingLists();\n  };\n\n  render() {\n    console.log(localStorage.id);\n    return (\n      <Form className=\"new-list-form\">\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label className=\"list-name-label\">Name of List</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Name\"\n            ref={this.nameRef}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label className=\"list-budget-label\">Budget</Form.Label>\n          <Form.Control\n            className=\"budget-input\"\n            type=\"number\"\n            placeholder=\"Enter your budget\"\n            ref={this.budgetRef}\n          />\n        </Form.Group>\n        <Button onClick={() => this.goBack()}>Back</Button>\n        <Button\n          className=\"new-list-submit\"\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={this.handleSubmit}\n        >\n          Submit\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default ShoppingListForm;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass ShoppingListRow extends Component {\n  formatDate = date => {\n    const months = {\n      1: \"January\",\n      2: \"February\",\n      3: \"March\",\n      4: \"April\",\n      5: \"May\",\n      6: \"June\",\n      7: \"July\",\n      8: \"August\",\n      9: \"September\",\n      10: \"October\",\n      11: \"November\",\n      12: \"December\"\n    };\n    const days = {\n      1: \"st\",\n      2: \"nd\",\n      3: \"rd\",\n      4: \"th\",\n      5: \"th\",\n      6: \"th\",\n      7: \"th\",\n      8: \"th\",\n      9: \"th\",\n      0: \"th\"\n    };\n\n    date = date.split(\"-\");\n    let day = date.pop(-1);\n    let month = date.pop(-1);\n    month = months[month];\n    if (day >= 10) {\n      day = day + days[day[1]];\n    } else {\n      day = day + days[day];\n    }\n\n    let fullDate = month + \"  \" + day;\n\n    return fullDate;\n  };\n  destroyShoppingList = () => {\n    const { id } = this.props.shoppingList;\n    const { getShoppingLists } = this.props;\n    Api.delete(`shopping_list/${id}/`, {\n      headers: {\n        \"Content-Type\": \"Application/json\",\n        Authorization: `Token ${localStorage.token}`\n      }\n    })\n      .then(res => {\n        console.log(\"Shopping List Deleted\");\n        getShoppingLists();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    const { shoppingList, handleShowShoppingList } = this.props;\n    const { name, budget, products, date } = shoppingList;\n\n    return (\n      <tr>\n        <td>\n          <p\n            className=\"list-name\"\n            onClick={() => handleShowShoppingList(shoppingList, products)}\n          >\n            {name}\n            <br />\n          </p>\n          <Button\n            className=\"delete-list-button\"\n            variant=\"outline-danger\"\n            onClick={this.destroyShoppingList}\n          >\n            <span>X</span>\n          </Button>\n          <span className=\"list-date\"> {this.formatDate(date)}</span>\n        </td>\n\n        <td>\n          $ {budget}\n          <br />\n          <span></span>\n        </td>\n\n        <td>\n          <ul>{products.length}</ul>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ShoppingListRow;\n","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport ShoppingListRow from \"./ShoppingListRow\";\n\nclass ShoppingList extends Component {\n  state = {\n    shoppingList: []\n  };\n\n  componentDidUpdate() {}\n\n  render() {\n    const {\n      shoppingLists,\n      handleShowShoppingList,\n      products,\n      getShoppingLists\n    } = this.props;\n    const shoppingListElements = shoppingLists.map((shoppingList, i) => {\n      return (\n        <ShoppingListRow\n          key={i}\n          shoppingList={shoppingList}\n          //   productsLength={currentProductsLength}\n          products={products}\n          handleShowShoppingList={handleShowShoppingList}\n          getShoppingLists={getShoppingLists}\n        />\n      );\n    });\n    return (\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Shopping List</th>\n            <th>Budget</th>\n            <th>Items</th>\n          </tr>\n        </thead>\n        <tbody>{shoppingListElements}</tbody>\n      </Table>\n    );\n  }\n}\n\nexport default ShoppingList;\n","import React, { Component } from \"react\";\nclass ShoppingListProductShow extends Component {\n  state = {};\n  render() {\n    const { currentProducts } = this.props;\n    const { name, price } = currentProducts;\n    return (\n      <div>\n        <div className=\"product-name\">\n          <h2>{name.toUpperCase()}</h2>\n          <p>$ {price}</p>\n        </div>\n        <span className=\"add-to-cart-button\">\n          <label htmlFor=\"added\">Added to Cart</label>&nbsp;\n          <input type=\"checkbox\" value=\"added\" />\n        </span>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default ShoppingListProductShow;\n","import React, { Component } from \"react\";\nimport Api from \"../apis/api\";\nimport ShoppingListProductsShow from \"./ShoppingListProductShow\";\n\nclass ShoppingListProducts extends Component {\n  state = {\n    productList: [],\n    total: Number(this.props.total),\n    isLoaded: false\n  };\n\n  getProducts = () => {\n    const { products: productIds, updateTotal } = this.props;\n    const list = [];\n\n    productIds.forEach(id => {\n      Api.get(`products/${id}/`)\n        .then(res => {\n          list.push(res.data);\n\n          this.setState(prevState => {\n            return {\n              total: Math.round((prevState.total - res.data.price) * 100) / 100\n            };\n          });\n        })\n        .then(res => {\n          this.setState({\n            productList: list\n          });\n          updateTotal(this.state.total);\n        });\n    });\n  };\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  render() {\n    const { productList, isLoaded, total } = this.state;\n\n    let productElements = productList.map(\n      (product, i) =>\n        !isLoaded && (\n          <ShoppingListProductsShow\n            key={i}\n            currentProducts={product}\n            total={total}\n          />\n        )\n    );\n\n    return (\n      <td colSpan=\"3\" className=\"shopping-list-products\">\n        {productElements}\n      </td>\n    );\n  }\n}\n\nexport default ShoppingListProducts;\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form, Col, Row } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass AddProductForm extends Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  descriptionRef = React.createRef();\n  ingredientsRef = React.createRef();\n\n  state = {\n    productId: [],\n    isLoaded: false\n  };\n  /// Item form searches through api products to display suggestions\n  /// POST create product\n  /// PATCH then add item to list\n\n  getProductIds = () => {\n    const { products } = this.props.shoppingList;\n    console.log(products);\n  };\n  addProduct = () => {\n    const name = this.nameRef.current.value;\n    const price = this.priceRef.current.value;\n    let description = this.descriptionRef.current.value;\n    let ingredients = this.ingredientsRef.current.value;\n\n    const { isLoaded } = this.state;\n\n    if (!description) {\n      description = \"N/A\";\n    }\n    if (!ingredients) {\n      ingredients = \"N/A\";\n    }\n\n    const data = { name, price, description, ingredients };\n\n    Api.post(\"products/\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.token}`\n      }\n    })\n      .then(res => {\n        const { id } = res.data;\n        this.addProductToList(id);\n        this.setState({ productId: id, isLoaded: !isLoaded });\n        console.log(res.statusText);\n      })\n      .catch(err => {\n        console.log(\"Error: \" + err);\n      });\n  };\n\n  addProductToList = productId => {\n    const { isLoaded } = this.state;\n    const { getShoppingLists } = this.props;\n    const { id: listId, products } = this.props.shoppingList;\n    let data = {\n      products: [...products, Number(productId)]\n    };\n    Api.patch(`shopping_list/${listId}/`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.token}`\n      }\n    }).then(res => {\n      this.setState({ isLoaded: !isLoaded });\n      getShoppingLists();\n    });\n  };\n\n  handleSubmit = () => {\n    const { handleShowProductForm, getShoppingLists } = this.props;\n    // const price = this.priceRef.current.value;\n    this.addProduct();\n    getShoppingLists();\n    handleShowProductForm();\n  };\n  render() {\n    const { shoppingList, handleShowProductForm } = this.props;\n    const { id } = shoppingList;\n\n    return (\n      <Modal.Dialog show={handleShowProductForm.toString()}>\n        <Modal.Header>\n          <Modal.Title>Add a product to shopping list {id}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  placeholder=\"Enter Name\"\n                  ref={this.nameRef}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPrice\">\n                <Form.Label>Price</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"5.00\"\n                  ref={this.priceRef}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group as={Row} controlId=\"exampleForm.ControlDescription\">\n              <Form.Label className=\"form-description\">Description</Form.Label>\n              <Form.Control\n                className=\"form-description\"\n                as=\"textarea\"\n                rows=\"3\"\n                ref={this.descriptionRef}\n                placeholder=\"N/A\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"exampleForm.ControlIngredients\">\n              <Form.Label className=\"form-ingredients\">Ingredients</Form.Label>\n              <Form.Control\n                className=\"form-ingredients\"\n                as=\"textarea\"\n                rows=\"3\"\n                ref={this.ingredientsRef}\n                placeholder=\"N/A\"\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleShowProductForm}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n\nexport default AddProductForm;\n","import React, { Component } from \"react\";\nimport ShoppingListProducts from \"./ShoppingListProducts\";\nimport AddProductForm from \"./AddProductForm\";\nimport { Table } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\nclass ShoppingListShow extends Component {\n  state = {\n    showProductForm: false,\n    currentTotal: this.props.currentShoppingList.budget,\n    isLoaded: false,\n    products: [],\n    totalClass: null\n  };\n\n  getClass = () => {\n    let { currentTotal } = this.state;\n    currentTotal = Number(currentTotal);\n\n    if (\n      (currentTotal >= 1 && currentTotal <= 14 && currentTotal >= 0) ||\n      currentTotal <= 0\n    ) {\n      return \"danger\";\n    } else if (currentTotal >= 15 && currentTotal <= 30) {\n      return \"warning\";\n    } else {\n      return \"normal\";\n    }\n  };\n  getProducts = () => {\n    const { currentProducts: productIds } = this.props;\n    const { isLoaded } = this.state;\n    productIds.forEach(id => {\n      Api.get(`products/${id}/`).then(res => {\n        const { products } = this.state;\n        this.setState({\n          products: [...products, res.data],\n          isLoaded: !isLoaded\n        });\n      });\n    });\n    this.setState({ isLoaded: !isLoaded });\n  };\n  handleAddProduct = () => {\n    const { getShoppingLists } = this.props;\n    this.handleShowProductForm();\n    getShoppingLists();\n    this.getProducts();\n    // this.setState({ isLoaded: !isLoaded });\n  };\n  handleShowProductForm = () => {\n    const { showProductForm } = this.state;\n    this.setState({ showProductForm: !showProductForm });\n  };\n  updateTotal = total => {\n    this.setState({\n      currentTotal: total\n    });\n  };\n\n  componentDidUpdate() {\n    // this.setState({ totalClass: this.getClass() });\n    // this.state[\"totalClass\"] = this.getClass();\n  }\n  render() {\n    const { showProductForm, currentTotal, isLoaded, totalClass } = this.state;\n    const {\n      currentShoppingList: shoppingList,\n      currentProducts,\n      getShoppingLists\n    } = this.props;\n    const { name, budget: initialBudget, products } = shoppingList;\n    return (\n      <>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Shopping List</th>\n              <th>Initial Budget </th>\n              <th>Current Total </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <span>{name}</span>{\" \"}\n              </td>\n              <td>$ {initialBudget}</td>\n              <td className={totalClass}>$ {currentTotal}</td>\n            </tr>\n            <tr>\n              <th colSpan=\"3\" className=\"items-label\">\n                Items\n                <span\n                  className=\"add-item-button\"\n                  onClick={this.handleAddProduct}\n                >\n                  Add Product\n                </span>\n              </th>\n            </tr>\n            {products.length >= 1 && !isLoaded && (\n              <tr>\n                <ShoppingListProducts\n                  total={currentTotal}\n                  currentProducts={currentProducts}\n                  products={products}\n                  updateTotal={this.updateTotal}\n                />\n              </tr>\n            )}\n          </tbody>\n        </Table>\n\n        {showProductForm && (\n          <AddProductForm\n            getShoppingLists={getShoppingLists}\n            getProducts={this.getProducts}\n            handleShowProductForm={this.handleShowProductForm}\n            handleAddProduct={this.handleAddProduct}\n            shoppingList={shoppingList}\n            updateTotal={this.updateTotal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default ShoppingListShow;\n","import React, { Component } from \"react\";\nimport Api from \"../apis/api\";\nimport ShoppingListForm from \"./ShoppingListForm\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport ShoppingList from \"./ShoppingList\";\nimport ShoppingListProductShow from \"./ShoppingListProductShow\";\nimport ShoppingListShow from \"./ShoppingListShow\";\nimport ReactLoading from \"react-loading\";\nclass ShoppingListPage extends Component {\n  state = {\n    shoppingLists: null,\n    showShoppingListForm: false,\n    showShoppingListProduct: false,\n    handleShowShoppingList: false,\n    currentShoppingList: null,\n    currentProducts: [],\n\n    isLoaded: false\n  };\n\n  getShoppingLists = () => {\n    Api.get(\"shopping_list/\").then(res => {\n      const lists = res.data;\n      const id = localStorage.id;\n      let userShoppingList = lists.filter(list => {\n        if (list.user === Number(id)) {\n          return list;\n        }\n        return (list = null);\n      });\n      this.setState({\n        shoppingLists: userShoppingList,\n        isLoaded: !this.state.loaded\n      });\n    });\n  };\n\n  handleShowShoppingListForm = () => {\n    const { showShoppingListForm } = this.state;\n    this.setState({ showShoppingListForm: !showShoppingListForm });\n  };\n  handleShowShoppingList = (shoppingList, products) => {\n    const { showShoppingList } = this.state;\n\n    this.setState({\n      showShoppingList: !showShoppingList,\n      currentShoppingList: shoppingList,\n      currentProducts: products\n    });\n  };\n  componentDidMount() {\n    this.getShoppingLists();\n  }\n\n  render() {\n    const {\n      showShoppingListForm,\n      showShoppingListProduct,\n      showShoppingList,\n      shoppingLists,\n      currentShoppingList,\n      currentProducts,\n      isLoaded\n    } = this.state;\n\n    return (\n      <>\n        <div>\n          {showShoppingListForm ? (\n            <ShoppingListForm\n              handleShowShoppingListForm={this.handleShowShoppingListForm}\n              handleShowShoppingList={this.handleShowShoppingList}\n              getShoppingLists={this.getShoppingLists}\n            />\n          ) : (\n            <Container className=\"shopping-list-container\">\n              <Row>\n                <h2 className=\"shopping-list-heading\">Your Shopping Lists</h2>\n\n                <Col lg={12}>\n                  {isLoaded ? (\n                    <ShoppingList\n                      shoppingLists={shoppingLists}\n                      currentShoppingList={currentShoppingList}\n                      handleShowShoppingList={this.handleShowShoppingList}\n                      products={currentProducts}\n                      getShoppingLists={this.getShoppingLists}\n                    />\n                  ) : (\n                    <ReactLoading\n                      className=\"loading-icon\"\n                      type=\"bubbles\"\n                      color=\"#007bff\"\n                      height={367}\n                      width={175}\n                    />\n                  )}\n                </Col>\n              </Row>\n\n              <Button\n                className=\"add-list-button\"\n                onClick={this.handleShowShoppingListForm}\n              >\n                Click to add a new shopping list\n              </Button>\n\n              {showShoppingListProduct && <ShoppingListProductShow />}\n              {showShoppingList && (\n                <ShoppingListShow\n                  getShoppingLists={this.getShoppingLists}\n                  currentProducts={currentProducts}\n                  currentShoppingList={currentShoppingList}\n                  handleShowShoppingList={this.handleShowShoppingList}\n                />\n              )}\n            </Container>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ShoppingListPage;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass StoreShow extends Component {\n  destroyStore = () => {\n    const { id, getStores } = this.props;\n\n    Api.delete(`stores/${id}/`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${window.localStorage.token}`\n      }\n    })\n      .then(res => {\n        getStores();\n        console.log(\"OK\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    const { name, address, aisles, handleShowStore, store } = this.props;\n    return (\n      <Row>\n        <Col className=\"store-address\" onClick={() => handleShowStore(store)}>\n          {address}\n        </Col>\n        <Col className=\"store-name\" onClick={() => handleShowStore(store)}>\n          {name}\n        </Col>\n        <Col className=\"store-aisles\">{aisles.length}</Col>\n        <Col className=\"store-aisles\">4</Col>\n        <Col className=\"delete-store\">\n          <Button variant=\"outline-danger\" onClick={this.destroyStore}>\n            X\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default StoreShow;\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\n\nclass StoreForm extends Component {\n  state = {};\n  nameRef = React.createRef();\n  addressRef = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { handleShowForm } = this.props;\n    let name = this.nameRef.current.value;\n    let address = this.addressRef.current.value;\n\n    let data = {\n      name,\n      address,\n      user: localStorage.id\n    };\n    Api.post(\"stores/\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${window.localStorage.token}`\n      }\n    })\n      .then(res => {\n        handleShowForm();\n        console.log(res.statusText);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    const { handleShowForm } = this.props;\n    return (\n      <Modal.Dialog>\n        <Modal.Header>\n          <Modal.Title>Add A Store</Modal.Title>\n        </Modal.Header>\n\n        <Form>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label>Store Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter Store Name\"\n              ref={this.nameRef}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicAddress\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"address\"\n              placeholder=\"Example Road, Toronto, Ontario\"\n              ref={this.addressRef}\n            />\n          </Form.Group>\n        </Form>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleShowForm}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n\nexport default StoreForm;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass StoreProducts extends Component {\n  state = {};\n  render() {\n    const { handleShowProducts } = this.props;\n    return (\n      <Container>\n        <Button variant=\"outline-primary\" onClick={handleShowProducts}>\n          Back\n        </Button>\n        <Row>\n          <Col>\n            <h1>Products</h1>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default StoreProducts;\n","import React, { Component } from \"react\";\nimport { Container, Col, Button, Row } from \"react-bootstrap\";\nimport StoreProducts from \"./StoreProducts\";\n\nclass StorePage extends Component {\n  state = {\n    showProducts: false\n  };\n  handleShowProducts = () => {\n    const { showProducts } = this.state;\n    this.setState({ showProducts: !showProducts });\n  };\n\n  render() {\n    const { showProducts } = this.state;\n\n    const { handleShowStore, name, address } = this.props;\n    return (\n      <>\n        {!showProducts ? (\n          <div>\n            <Button variant=\"outline-primary\" onClick={() => handleShowStore()}>\n              Back\n            </Button>\n            <Container className=\"store-page-container\">\n              <Row>\n                <Col>\n                  <h1>{name}</h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <p>{address}</p>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <strong>Aisles</strong>\n                </Col>\n                <Col>\n                  <strong>Categories</strong>\n                </Col>\n                <Col>\n                  <strong onClick={this.handleShowProducts}>Products</strong>\n                </Col>\n              </Row>\n              <Row>\n                <Col>get aisles</Col>\n                <Col>get categories</Col>\n                <Col>get products</Col>\n              </Row>\n            </Container>\n          </div>\n        ) : (\n          <>\n            <StoreProducts handleShowProducts={this.handleShowProducts} />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default StorePage;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\nimport StoreShow from \"./StoreShow\";\nimport StoreForm from \"./StoreForm\";\nimport StorePage from \"./StorePage\";\nimport ReactLoading from \"react-loading\";\n\nclass Store extends Component {\n  state = {\n    stores: [],\n    showForm: false,\n    showStore: false,\n    selectedStore: null\n  };\n\n  getStores = () => {\n    Api.get(\"stores/\").then(res => {\n      console.log(res.data);\n      let stores = res.data;\n      let usersStores = stores.filter(store => {\n        if (Number(store.user) === Number(localStorage.id)) {\n          return store;\n        }\n        return (store = null);\n      });\n\n      this.setState({ stores: usersStores });\n    });\n  };\n\n  allStores = () => {\n    const { stores, selectedStore } = this.state;\n\n    return stores.map((store, i) => (\n      <StoreShow\n        key={i}\n        {...store}\n        store={store}\n        handleShowStore={this.handleShowStore}\n        selectedStore={selectedStore}\n        getStores={this.getStores}\n      />\n    ));\n  };\n\n  selectedStore = () => {\n    const { stores, selectedStore } = this.state;\n    const { id } = selectedStore;\n    return stores.map((store, i) => {\n      if (store.id === id) {\n        return (\n          <StorePage\n            key={i}\n            {...store}\n            handleShowStore={this.handleShowStore}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  handleShowForm = () => {\n    const { showForm } = this.state;\n    this.setState({ showForm: !showForm });\n  };\n  handleShowStore = store => {\n    const { showStore } = this.state;\n    this.setState({ showStore: !showStore, selectedStore: store });\n  };\n\n  componentDidMount() {\n    this.getStores();\n  }\n  render() {\n    const { showForm, showStore } = this.state;\n    return (\n      <Container>\n        {!showStore ? (\n          <>\n            <div className=\"store-main-heading\">\n              <p>My Stores</p>\n            </div>\n\n            <Row className=\"store-col-header\">\n              <Col>\n                <strong>Address</strong>\n              </Col>\n              <Col>\n                <strong>Name</strong>\n              </Col>\n\n              <Col>\n                <strong>Aisles</strong>\n              </Col>\n              <Col>\n                <strong>Products</strong>\n              </Col>\n              <Col></Col>\n            </Row>\n\n            {!showStore ? (\n              this.allStores()\n            ) : (\n              <ReactLoading\n                type=\"spokes\"\n                color=\"#007bff\"\n                height={667}\n                width={375}\n              />\n            )}\n\n            <Row>\n              <Col> </Col>\n              <Col>\n                <Button\n                  className=\"add-store\"\n                  variant=\"outline-primary\"\n                  onClick={this.handleShowForm}\n                >\n                  Add a store\n                </Button>\n              </Col>\n              <Col> </Col>\n            </Row>\n            <Row>\n              <Col> </Col>\n              <Col sm={12} md={12} lg={12}>\n                {showForm && (\n                  <StoreForm\n                    handleShowForm={this.handleShowForm}\n                    showForm={showForm}\n                  />\n                )}\n              </Col>\n              <Col> </Col>\n            </Row>\n          </>\n        ) : (\n          // <div>Hey</div>\n          <>{this.selectedStore()}</>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Store;\n","import React, { Component } from \"react\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"login-form\"\n        onSubmit={e => this.props.handleLogin(e, this.state)}\n      >\n        <h4>Log In</h4>\n        <label className=\"login-username-label\" htmlFor=\"username\">\n          Username\n        </label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handleChange}\n        />\n        <label className=\"login-password-label\" htmlFor=\"password\">\n          Password\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n        />\n        <input className=\"login-submit\" type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\n\nclass Signup extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"signup-form\"\n        onSubmit={e => this.props.handleSignup(e, this.state)}\n      >\n        <h4>Sign Up</h4>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Api from \"../apis/api\";\n\nclass Register extends Component {\n  state = {\n    loggedIn: localStorage.token ? true : false,\n    username: localStorage.username || null,\n    displayedForm: null\n  };\n\n  handleSignup = (e, data) => {\n    e.preventDefault();\n    Api.post(\"users/\", {\n      username: data.username,\n      password: data.password\n    })\n      .then(res => {\n        localStorage.token = res.data.token;\n        localStorage.id = res.data.id;\n        localStorage.username = res.data.username;\n        console.log(res.statusText);\n        this.displayForm(\"\");\n        this.setState({ loggedIn: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleLogin = (e, data) => {\n    e.preventDefault();\n    Axios.post(\"https://shop-it-quick.herokuapp.com/authenticate/\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        localStorage.token = res.data.token;\n        localStorage.id = res.data.id;\n        localStorage.username = res.data.username;\n        console.log(res.statusText);\n        this.displayForm(\"\");\n        this.setState({ loggedIn: true });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleLogout = e => {\n    e.preventDefault();\n    localStorage.token = \"\";\n    localStorage.id = \"\";\n    localStorage.username = \"\";\n    this.displayForm(\"\");\n    this.setState({ loggedIn: false });\n  };\n\n  displayForm = form => {\n    this.setState({\n      displayedForm: form\n    });\n  };\n\n  loggedOutNav = (\n    <div className=\"center\">\n      <ul>\n        <li className=\" login-button\" onClick={() => this.displayForm(\"login\")}>\n          Login\n        </li>\n\n        <li\n          className=\" signup-button\"\n          onClick={() => this.displayForm(\"signup\")}\n        >\n          Signup\n        </li>\n      </ul>\n    </div>\n  );\n  loggedInNav = (\n    <button\n      className=\"btn btn-outline-primary logout-button\"\n      onClick={this.handleLogout}\n    >\n      Logout\n    </button>\n  );\n\n  render() {\n    const { displayedForm } = this.state;\n    let form;\n    switch (this.state.displayedForm) {\n      case \"login\":\n        form = <Login handleLogin={this.handleLogin} />;\n        break;\n      case \"signup\":\n        form = <Signup handleSignup={this.handleSignup} />;\n        break;\n      default:\n        form = null;\n    }\n    return (\n      <div>\n        <span className=\"logout-button-container\">\n          {this.state.loggedIn ? this.loggedInNav : this.loggedOutNav}\n        </span>\n        <span className=\"welcome-message\">{displayedForm && <>{form}</>}</span>\n        <div className=\"login-welcome\">\n          {this.state.loggedIn ? (\n            <div className=\"login-username\">\n              {\" \"}\n              {`Hello, ${localStorage.username.slice(0, 1).toUpperCase() +\n                localStorage.username.slice(1)}`}\n            </div>\n          ) : (\n            \"Please Log In\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Api from \"../apis/api\";\nclass Suggestions extends Component {\n  state = {\n    show: \"hide\"\n  };\n  handleAddToList = () => {\n    // todo:::\n    //  show shopping list page\n    //  pass in the item with the add to list fn\n\n    Api.get(`shopping_list/`).then(res => {\n      console.log(res.data);\n    });\n  };\n  render() {\n    const { showClass } = this.props;\n    const { food_description: suggestion } = this.props.suggestion;\n    return (\n      <li className={showClass}>\n        {suggestion}\n        <Button\n          variant=\"outline-primary\"\n          className=\"add-suggestion-to-cart\"\n          onClick={() => this.handleAddToList()}\n        >\n          Add To List\n        </Button>\n      </li>\n    );\n  }\n}\n\nexport default Suggestions;\n","import React from \"react\";\n// import edamam from \"../apis/edamam\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Suggestions from \"./Suggestions\";\n\nclass SearchPage extends React.Component {\n  state = {\n    suggestions: [],\n    searchResults: [],\n    nextItems: false\n  };\n  searchRef = React.createRef();\n\n  getFoodData = () => {\n    const query = this.searchRef.current.value;\n    axios\n      .get(\n        \"https://food-nutrition.canada.ca/api/canadian-nutrient-file/food/?lang=en&type=json\"\n      )\n      .then(res => {\n        let data = res.data;\n        const suggestions = data.filter(d => {\n          if (d.food_description.includes(query)) {\n            return d.food_description;\n          }\n        });\n        this.setState({ suggestions: suggestions });\n      });\n  };\n\n  showSuggestions = () => {\n    const { suggestions } = this.state;\n    let suggestionElements = suggestions.map((suggestion, i) => {\n      while (i < 20) {\n        if (suggestions !== null) {\n          return (\n            <Suggestions key={i} showClass=\"show\" suggestion={suggestion} />\n          );\n        }\n      }\n    });\n    return suggestionElements;\n  };\n  //   nextItems = () => {\n  //     // this.setState({ suggestions: [] });\n  //     const { nextItems } = this.state;\n  //     this.showSuggestions(10, 20);\n  //   };\n  //   handleNextItem = () => {\n  //     const { nextItems } = this.state;\n  //     this.setState({ nextItems: !nextItems });\n  //     this.nextItems();\n  //   };\n  render() {\n    return (\n      <div>\n        <form className=\"search-form\" method=\"GET\">\n          <input\n            type=\"search\"\n            id=\"site-search\"\n            name=\"q\"\n            aria-label=\"Search through site content\"\n            ref={this.searchRef}\n          ></input>\n\n          <Button\n            className=\"suggestion-button\"\n            onClick={this.getFoodData}\n            variant=\"outline-primary\"\n          >\n            Get Suggestions\n          </Button>\n        </form>\n        <div className=\"suggestion-box\">\n          <ul>{this.showSuggestions(0, 10)}</ul>\n          {/* <Button\n            onClick={() => this.handleNextItem()}\n            variant=\"outline-primary\"\n          >\n            More Related Items\n          </Button> */}\n          {/* <ul>{this.nextItems()}</ul> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React, { Component } from \"react\";\nimport ReactLoading from \"react-loading\";\n\nclass Test extends Component {\n  state = { searchResults: [] };\n  searchRef = React.createRef();\n\n  //   handleSubmit = () => {\n  //     const query = this.searchRef.current.value;\n  //     const app_id = process.env.REACT_APP_APP_ID;\n  //     const application_key = process.env.REACT_APP_APPLICATION_KEY;\n  //     console.log(application_key);\n  //     edamam\n  //       .get(`/parser?ingr=${query}&app_id=${app_id}&app_key=${application_key}`)\n  //       .then(res => {\n  //         console.log(res.statusText);\n  //         console.log(res.data);\n  //         const data = res.data.parsed[0];\n  //         const category = \"CATEGORY: \" + data.food.category;\n  //         const categoryLabel = \"CATEGORYLABEL: \" + data.food.categoryLabel;\n  //         const label = data.food.label;\n  //         let result = \"\";\n  //         // switch (category || categoryLabel || label) {\n  //         //   case \"raw\":\n  //         //     result.push(\"produce\");\n  //         //     break;\n  //         // }\n  //         if (label.includes(\"raw\")) {\n  //           result = \"raw/produce\";\n  //         }\n  //         if (label.includes(\"cereal\")) {\n  //           result = \"cereal\";\n  //         }\n  //         if (label.includes(query)) {\n  //           result = `${query} has no label`;\n  //         }\n\n  //         console.log(result);\n  //         console.log(category + categoryLabel + label);\n  //       })\n  //       .catch(err => {\n  //         console.log(err);\n  //       });\n  //   };\n\n  render() {\n    return (\n      <div>\n        {/* <form className=\"search-form\" method=\"GET\">\n          <input\n            type=\"search\"\n            id=\"site-search\"\n            name=\"q\"\n            aria-label=\"Search through site content\"\n            ref={this.searchRef}\n          ></input>\n\n          <Button\n            className=\"suggestion-button\"\n            onClick={this.getFoodData}\n            variant=\"outline-primary\"\n          >\n            Get Suggestions\n          </Button>\n        </form> */}\n        <ReactLoading type=\"bubbles\" color=\"#007bff\" height={367} width={175} />\n        ;\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport ShoppingListPage from \"./components/ShoppingListPage\";\nimport Store from \"./components/Store\";\nimport Register from \"./components/Register\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport SearchPage from \"./components/SearchPage\";\nimport Test from \"./components/test\";\n\nfunction App() {\n  return (\n    <Container fluid={true} className=\"App container\">\n      <Router>\n        <Nav className=\"justify-content-center navbar\">\n          <Nav.Item>\n            <Link to=\"/shop_it_django\">Home</Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link to=\"/shopping_list\"> Shopping List</Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link to=\"/stores\"> Stores </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link to=\"/search\"> Suggestions </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Register />\n          </Nav.Item>\n        </Nav>\n\n        <Switch>\n          <Route exact path=\"/shop_it_django/\">\n            <Home />\n          </Route>\n          <Route path=\"/shopping_list\">\n            <ShoppingListPage />\n          </Route>\n          {/*  if admin  */}\n          <Route exact path=\"/stores\">\n            <Store />\n          </Route>\n          <Route exact path=\"/search\">\n            <SearchPage />\n          </Route>\n          <Route exact path=\"/test\">\n            <Test />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}